{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap ad3e1926a1833d51c845","webpack:///./game/index.ts","webpack:///./game/utils.ts","webpack:///./game/game.ts","webpack:///./game/civilization.ts","webpack:///./game/resource.ts","webpack:///./game/resources.ts","webpack:///./game/citizen.ts","webpack:///./game/citizens.ts","webpack:///./game/tech.ts","webpack:///./game/techs.ts","webpack:///./game/template.ts","webpack:///./game/notify.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","savePlayer","store","set","playerCiv","console","log","get","abbrNum","number","decPlaces","Math","pow","abbrev","i","length","size","round","time","d","h","floor","s","append","node","html","el","document","querySelector","insertAdjacentHTML","bindElement","eventType","callback","addEventListener","event","elt","query","all","querySelectorAll","startGame","undefined","loadCiv","Civilization","civName","leaderName","location","startSavedGame","startNewGame","debug","templates","createStartScreen","game","createGameUI","settingsScreen","setPlayerCiv","traitsSelection","civNameInput","leaderNameInput","value","index","traitSelect","trait","leaderTraits","intro","clickopolisGame","createElement","innerHTML","setAttribute","drawUI","remove","body","appendChild","preventDefault","addClickToTotal","checkPopulationGrowthCost","resourceClick","popGrowthCost","populationText","resources","total","populationGrowthCost","population","textContent","toString","updatePopulation","notify","setInfluenceImage","populateTechnologies","citizenClick","techClick","UiSettingsButtons","pop","cashPM","researchPM","anger","pollution","item","element","max","perClick","createScreenHeader","createResourcesScreen","createCivilizationScreen","createCitizenScreen","citizens","createEconomyScreen","createBuildingsScreen","createTechnologyScreen","createDiplomacyScreen","createMilitaryScreen","createSettingsScreen","technologies","techs","items","t","name","selected","purchased","description","effects","updateYear","year","updateTime","title","addGoldenAgePoints","goldenAgeProgress","goldenAgeMeter","goldenAgePoints","happiness","u","goldenAgePercent","bgString","style","background","addResearchPoints","research","toFixed","researchPercent","researchCost","addCash","cash","cashText","influence","src","resourceButtons","forEach","className","this","getAttribute","r","image","showResourceInfo","citizenButtons","citizen","sel","amount","techEls","tech","isCtrlPressed","button","width","init","Utils","Game","Resource","Resources","Citizen","Citizens","Tech","Techs","Templates","food","prod","stone","fish","banana","spices","gold","gems","oil","uranium","iron","horse","spaghetti","chihuahua","agriculture","animalHusbandry","archery","fishing","herbalMedicine","masonry","mining","mysticism","sailing","trading","woodworking","writing","farmer","miner","soldier","isWindowActive","window","which","setInterval","perSecond","prototype","introStep","era","leaderTraitsMax","health","legacy","achievements","goldenAgeGoal","populationReal","researchingTechs","strength","defense","push","resource","ri","foodContribution","prodContribution","ci","available","ti","startScreen","resourcesScreen","screenHeader","citizensScreen","civilizationScreen","economyScreen","buildingsScreen","technologyScreen","diplomacyScreen","militaryScreen","message","note","setTimeout"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// <reference path=\"store.d.ts\" />\r\n\t// <reference path=\"underscore.d.ts\" />\r\n\t\"use strict\";\r\n\tvar Utils = __webpack_require__(2);\r\n\tvar Game = __webpack_require__(3);\r\n\tvar Civilization = __webpack_require__(4);\r\n\tvar Resource = __webpack_require__(5);\r\n\tvar Resources = __webpack_require__(6);\r\n\tvar Citizen = __webpack_require__(7);\r\n\tvar Citizens = __webpack_require__(8);\r\n\tvar Tech = __webpack_require__(9);\r\n\tvar Techs = __webpack_require__(10);\r\n\tvar Templates = __webpack_require__(11);\r\n\tvar notify = __webpack_require__(12);\r\n\tvar game = new Game(0);\r\n\tvar playerCiv;\r\n\tvar templates = new Templates();\r\n\tvar food = new Resource('food', 1, 0, 1000, 0, 'food', 'Food.');\r\n\tvar prod = new Resource('prod', 1, 0, 2000, 0, 'prod', 'Prod.');\r\n\tvar stone = new Resource('stone', 0, 0, -1, 0, 'stone', 'Stones are important as a building block for buildings.');\r\n\tvar fish = new Resource('fish', 0, 0, -1, 0, 'fish', 'Fish are caught in nets by citizens periodically. Each fish provides +.5 <img src=\"img/health.png\"> Fish are a popular trade item with Desert nations.');\r\n\tvar banana = new Resource('banana', 0, 0, -1, 0, 'banana', 'Banana are harvested by farmers periodically. Each banana provides +.5 <img src=\"img/health.png\"> Banana are a popular trade item with Tundra nations.');\r\n\tvar spices = new Resource('spices', 0, 0, -1, 0, 'spices', 'Spices');\r\n\tvar gold = new Resource('gold', 0, 0, -1, 0, 'gold', 'Gold');\r\n\tvar gems = new Resource('gems', 0, 0, -1, 0, 'gems', 'Gemss');\r\n\tvar oil = new Resource('oil', 0, 0, -1, 0, 'oil', 'Oil');\r\n\tvar uranium = new Resource('uranium', 0, 0, -1, 0, 'uranium', 'Uranium');\r\n\tvar iron = new Resource('iron', 0, 0, -1, 0, 'iron', 'Iron');\r\n\tvar horse = new Resource('horse', 0, 0, -1, 0, 'horse', 'Horsies :]');\r\n\tvar spaghetti = new Resource('spaghetti', 0, 0, -1, 0, 'spaghetti', 'Spaghetts');\r\n\tvar chihuahua = new Resource('chihuahua', 0, 0, -1, 0, 'chihuahua', 'Bark!');\r\n\tvar resources = new Resources([food, prod, stone, fish, spices, banana, gold, gems, oil, iron, uranium, chihuahua, spaghetti, horse]);\r\n\tvar agriculture = new Tech('agriculture', 'ancient', 'a technology', ['+.2 <img src=\"img/food.png\"> PS per farmer', 'Unlocks: Animal Husbandry, Mining']);\r\n\tvar animalHusbandry = new Tech('animal husbandry', 'ancient', 'a tech', ['', '']);\r\n\tvar archery = new Tech('archery', 'ancient', 'Bow and arrow, hitting bone and marrow', ['Can assign Soldiers as Archers.', 'Can build Barracks.']);\r\n\tvar fishing = new Tech('fishing', 'ancient', 'Just make sure to use a Super Rod.', ['Unlocks <img src=\"img/fish.png\"> resource.', 'Unlocks: Sailing']);\r\n\tvar herbalMedicine = new Tech('herbal medicine', 'ancient', '', ['Can build Ascelpeia.', '+10 <img src=\"img/health.png\"> for discovering.']);\r\n\tvar masonry = new Tech('masonry', 'ancient', 'wububuu', ['', '']);\r\n\tvar mining = new Tech('mining', 'ancient', 'not safe for minors', ['+.2 <img src=\"img/prod.png\"> PS per miner', 'Unlocks: Masonry, Pottery']);\r\n\tvar mysticism = new Tech('mysticism', 'ancient', 'Mysterious gods bring riches, temples, and a couple blood sacrifices.', ['Can assign Clerics.', 'Can build Temples.', 'Can build Stonehenge.']);\r\n\tvar sailing = new Tech('sailing', 'ancient', 'It\\'s a lot harder to sail if you stay at half-mast!', ['Can assign soldiers as Navy.', 'Can meet Coastal and Oceanic Nations.']);\r\n\tvar trading = new Tech('trading', 'ancient', 'My six chickens for your goat?', ['Unlocks Bartering Economic System.', 'Can assign Merchants.']);\r\n\tvar woodworking = new Tech('woodworking', 'ancient', 'TIMBER!!!', ['Unlocks <img src=\"img/spices.png\"> resources.', 'Can assign Woodcutters.']);\r\n\tvar writing = new Tech('writing', 'ancient', 'Allows poorly written fanfiction in Information era.', ['Unlocks Diplomacy.', 'Can build Library.']);\r\n\tvar techs = new Techs([agriculture,\r\n\t    animalHusbandry,\r\n\t    archery,\r\n\t    fishing,\r\n\t    herbalMedicine,\r\n\t    masonry,\r\n\t    mining,\r\n\t    mysticism,\r\n\t    sailing,\r\n\t    trading,\r\n\t    woodworking,\r\n\t    writing]);\r\n\tvar farmer = new Citizen('farmer', 'farmer', 0, 'a farmer', 1, 0);\r\n\tvar miner = new Citizen('miner', 'miner', 0, 'a miner', 1, 0);\r\n\tvar soldier = new Citizen('soldier', 'soldier', 0, 'a soldier', 1, 0);\r\n\tvar citizens = new Citizens([farmer, miner, soldier]);\r\n\tvar u = new Utils();\r\n\tvar isWindowActive = true;\r\n\tvar isCtrlPressed = false;\r\n\twindow.addEventListener('focus', function () {\r\n\t    isWindowActive = true;\r\n\t});\r\n\twindow.addEventListener('blur', function () {\r\n\t    isWindowActive = false;\r\n\t});\r\n\tdocument.addEventListener('keydown', function (event) {\r\n\t    if (event.which === 17) {\r\n\t        isCtrlPressed = true;\r\n\t    }\r\n\t});\r\n\tfunction saveGame() {\r\n\t    store.set('game', game);\r\n\t    store.get('game');\r\n\t}\r\n\tfunction savePlayer() {\r\n\t    store.set('playerCiv', playerCiv);\r\n\t    console.log(store.get('playerCiv'));\r\n\t}\r\n\tfunction removeItem(arr, item) {\r\n\t    for (var i = arr.length - 1; i--;) {\r\n\t        if (arr[i] === item)\r\n\t            arr.splice(i, 1);\r\n\t    }\r\n\t}\r\n\tfunction abbrNum(number, decPlaces) {\r\n\t    // 2 decimal places => 100, 3 => 1000, etc\r\n\t    decPlaces = Math.pow(10, decPlaces);\r\n\t    // Enumerate number abbreviations\r\n\t    var abbrev = [\"k\", \"m\", \"b\", \"t\"];\r\n\t    // Go through the array backwards, so we do the largest first\r\n\t    for (var i = abbrev.length - 1; i >= 0; i--) {\r\n\t        // Convert array index to \"1000\", \"1000000\", etc\r\n\t        var size = Math.pow(10, (i + 1) * 3);\r\n\t        // If the number is bigger or equal do the abbreviation\r\n\t        if (size <= number) {\r\n\t            // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n\t            // This gives us nice rounding to a particular decimal place.\r\n\t            number = Math.round(number * decPlaces / size) / decPlaces;\r\n\t            // Handle special case where we round up to the next abbreviation\r\n\t            if ((number == 1000) && (i < abbrev.length - 1)) {\r\n\t                number = 1;\r\n\t                i++;\r\n\t            }\r\n\t            // Add the letter for the abbreviation\r\n\t            number += abbrev[i];\r\n\t            // We are done... stop\r\n\t            break;\r\n\t        }\r\n\t    }\r\n\t    return number;\r\n\t}\r\n\t;\r\n\tfunction time(d) {\r\n\t    var h = Math.floor(d / 3600);\r\n\t    var m = Math.floor(d % 3600 / 60);\r\n\t    var s = Math.floor(d % 3600 % 60);\r\n\t    return ((h > 0 ? h + \":\" + (m < 10 ? \"0\" : \"\") : \"\") + m + \":\" + (s < 10 ? \"0\" : \"\") + s);\r\n\t}\r\n\t;\r\n\tfunction choose(arr) {\r\n\t    return arr[Math.floor(Math.random() * arr.length)];\r\n\t}\r\n\tfunction prepend(node, html) {\r\n\t    var el = document.querySelector(node);\r\n\t    el.insertAdjacentHTML('beforeend', html);\r\n\t}\r\n\tfunction append(node, html) {\r\n\t    var el = document.querySelector(node);\r\n\t    el.insertAdjacentHTML('afterend', html);\r\n\t}\r\n\tfunction bindElement(node, eventType, callback) {\r\n\t    var el = document.querySelector(node);\r\n\t    el.addEventListener(eventType, function (event) {\r\n\t        console.log(callback);\r\n\t        return callback();\r\n\t    });\r\n\t}\r\n\tfunction hideElement(element) {\r\n\t    element = element;\r\n\t    element.className += \" hidden\";\r\n\t}\r\n\tfunction removeElement(element) {\r\n\t    element = element;\r\n\t    element.remove();\r\n\t}\r\n\tfunction elt(query, all) {\r\n\t    if (all === void 0) { all = false; }\r\n\t    if (all === false)\r\n\t        return document.querySelector(query);\r\n\t    else\r\n\t        return document.querySelectorAll(query);\r\n\t}\r\n\tfunction startGame() {\r\n\t    if (store.get('playerCiv') !== undefined) {\r\n\t        var loadCiv = store.get('playerCiv');\r\n\t        playerCiv = new Civilization(loadCiv.civName, loadCiv.leaderName, loadCiv.location);\r\n\t        startSavedGame();\r\n\t    }\r\n\t    else {\r\n\t        startNewGame();\r\n\t        playerCiv = new Civilization('', '', '');\r\n\t    }\r\n\t}\r\n\tfunction startSavedGame() {\r\n\t    console.debug(\"Loading Saved Game...\");\r\n\t    append('body', templates.createStartScreen(playerCiv, game));\r\n\t    //store.clear();\r\n\t    bindElement('.load-btn', 'click', function () {\r\n\t        createGameUI();\r\n\t    });\r\n\t    bindElement('.current-btn', 'click', function () {\r\n\t        createGameUI();\r\n\t    });\r\n\t}\r\n\t;\r\n\tfunction startNewGame() {\r\n\t    console.debug(\"Starting New Game...\");\r\n\t    append('body', templates.settingsScreen);\r\n\t    // bindElement('.new-btn', 'click', function () {\r\n\t    //   console.log('Hey...is this thing working??');\r\n\t    // });\r\n\t    bindElement('.begin-btn', 'click', function () {\r\n\t        //console.log('hi');\r\n\t        setPlayerCiv();\r\n\t        createGameUI();\r\n\t    });\r\n\t    document.querySelector('#trait').addEventListener('change', function () {\r\n\t        traitsSelection(0);\r\n\t    });\r\n\t}\r\n\t;\r\n\tfunction setPlayerCiv() {\r\n\t    var civNameInput = document.querySelector('#civName'), leaderNameInput = document.querySelector('#leaderName'), location = document.querySelector('#location');\r\n\t    playerCiv.civName = civNameInput.value;\r\n\t    playerCiv.leaderName = leaderNameInput.value;\r\n\t    playerCiv.location = location.value;\r\n\t    savePlayer();\r\n\t}\r\n\tfunction traitsSelection(index) {\r\n\t    var traitSelect = document.querySelector('#trait');\r\n\t    var trait = traitSelect.value;\r\n\t    playerCiv.leaderTraits[index] = trait;\r\n\t    console.log(traitSelect.value, playerCiv.leaderTraits);\r\n\t    savePlayer();\r\n\t}\r\n\tfunction createGameUI() {\r\n\t    var intro = document.querySelector('.clickopolis-intro');\r\n\t    var clickopolisGame = document.createElement('section');\r\n\t    clickopolisGame.innerHTML = '';\r\n\t    clickopolisGame.setAttribute('class', 'clickopolis');\r\n\t    clickopolisGame.setAttribute('id', 'clickopolis');\r\n\t    drawUI(clickopolisGame);\r\n\t    intro != undefined ? intro.remove() : console.log('intro not defined');\r\n\t    document.body.appendChild(clickopolisGame);\r\n\t    //append('body', templates.resourcesScreen);\r\n\t    bindElement('.food-btn', 'click', function () {\r\n\t        event.preventDefault();\r\n\t        addClickToTotal('.r-food-total', 'food');\r\n\t        checkPopulationGrowthCost();\r\n\t    });\r\n\t    bindElement('.prod-btn', 'click', function () {\r\n\t        event.preventDefault();\r\n\t        addClickToTotal('.r-prod-total', 'prod');\r\n\t        checkPopulationGrowthCost();\r\n\t    });\r\n\t    resourceClick();\r\n\t    bindElement('.pop-btn', 'click', function () {\r\n\t        event.preventDefault();\r\n\t        var popGrowthCost = document.querySelector('.pop-growth-cost');\r\n\t        var populationText = document.querySelector('.population-text');\r\n\t        resources.get('food').total -= playerCiv.populationGrowthCost;\r\n\t        playerCiv.population += 1;\r\n\t        playerCiv.populationGrowthCost = Math.round(playerCiv.populationGrowthCost * playerCiv.population * .9);\r\n\t        populationText.textContent = playerCiv.population.toString();\r\n\t        popGrowthCost.textContent = playerCiv.populationGrowthCost.toString();\r\n\t        updatePopulation(1);\r\n\t        checkPopulationGrowthCost();\r\n\t        notify('Your population just grew, unlocking more possibilities!');\r\n\t    });\r\n\t    setInfluenceImage();\r\n\t    populateTechnologies();\r\n\t    citizenClick();\r\n\t    techClick();\r\n\t    UiSettingsButtons();\r\n\t}\r\n\tfunction updatePopulation(pop) {\r\n\t    playerCiv.cashPM += pop * 1;\r\n\t    playerCiv.researchPM += pop * 2;\r\n\t    playerCiv.anger += pop * 1;\r\n\t    playerCiv.pollution += pop * 1;\r\n\t    //elt('.research-text').textContent = playerCiv.research.toString();\r\n\t    elt('.cash-PM').textContent = playerCiv.cashPM;\r\n\t    elt('.civ-anger-text').textContent = playerCiv.anger;\r\n\t    elt('.civ-pollution-text').textContent = playerCiv.pollution;\r\n\t}\r\n\tfunction addClickToTotal(el, item) {\r\n\t    var element = elt(el);\r\n\t    if (resources.get(item).total >= resources.get(item).max)\r\n\t        resources.get(item).total = resources.get(item).max;\r\n\t    else\r\n\t        resources.get(item).total += resources.get(item).perClick;\r\n\t    element.innerHTML = resources.get(item).total.toString() + ' total';\r\n\t}\r\n\tsetInterval(function () {\r\n\t    if (isWindowActive) {\r\n\t        if (resources.get('food').total >= resources.get('food').max)\r\n\t            resources.get('food').total = resources.get('food').max;\r\n\t        else\r\n\t            resources.get('food').total += resources.get('food').perSecond;\r\n\t        elt('.r-food-total').textContent = resources.get('food').total.toString() + ' total';\r\n\t        if (resources.get('prod').total >= resources.get('prod').max)\r\n\t            resources.get('prod').total = resources.get('prod').max;\r\n\t        else\r\n\t            resources.get('food').total += resources.get('prod').perSecond;\r\n\t        elt('.r-prod-total').textContent = resources.get('prod').total.toString() + ' total';\r\n\t        updateTime();\r\n\t        addGoldenAgePoints();\r\n\t        addCash();\r\n\t        addResearchPoints();\r\n\t        checkPopulationGrowthCost();\r\n\t    }\r\n\t}, 1000);\r\n\tsetInterval(function () {\r\n\t    if (isWindowActive) {\r\n\t        updateYear();\r\n\t    }\r\n\t}, 1000 * 60);\r\n\tfunction drawUI(el) {\r\n\t    el.innerHTML = templates.createScreenHeader(playerCiv, game) +\r\n\t        templates.createResourcesScreen(playerCiv, resources) +\r\n\t        templates.createCivilizationScreen(playerCiv) +\r\n\t        templates.createCitizenScreen(playerCiv, citizens) +\r\n\t        templates.createEconomyScreen(playerCiv) +\r\n\t        templates.createBuildingsScreen() +\r\n\t        templates.createTechnologyScreen(playerCiv) +\r\n\t        templates.createDiplomacyScreen(playerCiv) +\r\n\t        templates.createMilitaryScreen(playerCiv) +\r\n\t        templates.createSettingsScreen(playerCiv, game);\r\n\t}\r\n\tfunction populateTechnologies() {\r\n\t    var technologies = document.querySelector('.technologies');\r\n\t    console.debug(\"tech element\", technologies);\r\n\t    for (var i = 0; i < techs.items.length; i++) {\r\n\t        var t = techs.items[i];\r\n\t        console.log(techs.items[i]);\r\n\t        technologies.innerHTML += \"\\n    <div class='tech' data-tech='\" + t.name + \"' data-selected=\" + t.selected + \" data-purchased=\" + t.purchased + \">\\n      <span class='tech-name'>\" + t.name + \"</span>\\n      <span class='tech-description'>\" + t.description + \"</span>\\n      <ul class='tech-list'>\\n        <li>\" + t.effects[0] + \"</li>\\n        <li>\" + t.effects[1] + \"</li>\\n      </ul>\\n    </div>\";\r\n\t    }\r\n\t}\r\n\tfunction updateYear() {\r\n\t    game.year += 1;\r\n\t    elt('.game-year-text').textContent = game.year;\r\n\t}\r\n\tfunction updateTime() {\r\n\t    game.time += 1;\r\n\t    elt('.game-year-text').title = time(game.time);\r\n\t}\r\n\tfunction addGoldenAgePoints() {\r\n\t    var goldenAgeProgress = elt('.golden-age-progress');\r\n\t    var goldenAgeMeter = elt('.metric-golden-age');\r\n\t    var goldenAgePoints = playerCiv.happiness - playerCiv.anger;\r\n\t    playerCiv.goldenAgeProgress += goldenAgePoints;\r\n\t    goldenAgeProgress.textContent = u.abbrNum(playerCiv.goldenAgeProgress);\r\n\t    var goldenAgePercent = ((playerCiv.goldenAgeProgress / goldenAgePoints) / 100) + '%';\r\n\t    var bgString = \"linear-gradient(to right, #BDBD6C 0%, #BDBD6C \" + goldenAgePercent + \", #222 \" + goldenAgePercent + \", #222)\";\r\n\t    goldenAgeMeter.style.background = bgString;\r\n\t}\r\n\tfunction addResearchPoints() {\r\n\t    playerCiv.research += playerCiv.researchPM / 60;\r\n\t    elt('.research-text').textContent = abbrNum(playerCiv.research.toFixed(1), 2);\r\n\t    var researchPercent = ((playerCiv.research / playerCiv.researchCost) * 100) + '%';\r\n\t    var bgString = \"linear-gradient(to right, #83D4D4 0%, #83D4D4 \" + researchPercent + \", #444 \" + researchPercent + \", #444 100%)\";\r\n\t    elt('.research-progress-bar').style.background = bgString;\r\n\t    if (playerCiv.research > playerCiv.researchCost) {\r\n\t        elt('.research-exceeding').textContent = 'You are currently exceeding your current tech goal.';\r\n\t    }\r\n\t    else {\r\n\t        elt('.research-exceeding').textContent = '';\r\n\t    }\r\n\t}\r\n\tfunction addCash() {\r\n\t    playerCiv.cash += playerCiv.cashPM / 60;\r\n\t    var cashText = elt('.cash-text');\r\n\t    cashText.textContent = playerCiv.cash.toFixed(2);\r\n\t}\r\n\tfunction setInfluenceImage() {\r\n\t    if (playerCiv.influence >= 0) {\r\n\t        elt('.influence-img').src = 'img/influence.png';\r\n\t    }\r\n\t    else {\r\n\t        elt('.influence-img').src = 'img/influence-alt.png';\r\n\t    }\r\n\t}\r\n\tfunction resourceClick() {\r\n\t    var resourceButtons = document.querySelectorAll('.resource');\r\n\t    [].forEach.call(resourceButtons, function (item) {\r\n\t        item.addEventListener('click', function () {\r\n\t            item.className = \"resource\";\r\n\t            var name = this.getAttribute('data-resource');\r\n\t            var r = resources.get(name);\r\n\t            if (this.className === \"resource active\") {\r\n\t                this.className = \"resource\";\r\n\t            }\r\n\t            else {\r\n\t                this.className += \" active\";\r\n\t                elt('.resource-info-screen').innerHTML = \"\\n          <h3><img src='img/\" + r.image + \".png'> \" + r.name + \"<br></h3>\\n          <p>\" + r.description + \"</p>\\n        \";\r\n\t            }\r\n\t            showResourceInfo(name);\r\n\t        });\r\n\t    });\r\n\t}\r\n\tfunction citizenClick() {\r\n\t    var citizenButtons = document.querySelectorAll('button[data-citizen]');\r\n\t    [].forEach.call(citizenButtons, function (item) {\r\n\t        item.addEventListener('click', function () {\r\n\t            var citizen = this.getAttribute('data-citizen');\r\n\t            var sel = '.' + citizen + '-num-text';\r\n\t            console.log(citizens.get(citizen).amount);\r\n\t            console.log(this.getAttribute('data-citizen-amount'));\r\n\t            citizens.get(citizen).amount += this.getAttribute('data-citizen-amount');\r\n\t            console.log(citizens.get(citizen).amount);\r\n\t            elt(sel).textContent = citizens.get(citizen).amount;\r\n\t            console.log(elt(sel).textContent);\r\n\t            // console.log(this.getAttribute('data-citizen-amount'));\r\n\t            // console.log(citizens.get(this.getAttribute('data-citizen')));\r\n\t            // elt(this.getAttribute('data-citizen') + '-num-text').textContent = citizens.get(this.getAttribute('data-citizen')).amount + 1;\r\n\t        });\r\n\t    });\r\n\t}\r\n\tfunction techClick() {\r\n\t    var techEls = document.querySelectorAll('.tech');\r\n\t    [].forEach.call(techEls, function (item) {\r\n\t        item.addEventListener('click', function () {\r\n\t            var tech = item.getAttribute('data-tech');\r\n\t            var selected = item.getAttribute('data-selected');\r\n\t            if (isCtrlPressed) {\r\n\t                if (techs.get(tech).selected) {\r\n\t                    techs.get(tech).selected = false;\r\n\t                    item.setAttribute('data-selected', false);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                techs.get(tech).selected = true;\r\n\t                console.log(techs.get(tech).selected);\r\n\t                item.setAttribute('data-selected', true);\r\n\t                if (techs.get(tech).selected) {\r\n\t                    // TODO: fix this mess\r\n\t                    elt('.researching-techs').textContent = techs.get(tech).name;\r\n\t                }\r\n\t            }\r\n\t        });\r\n\t    });\r\n\t}\r\n\tfunction showResourceInfo(name) {\r\n\t    console.log(name);\r\n\t}\r\n\tfunction checkPopulationGrowthCost() {\r\n\t    var button = document.querySelector('.pop-btn');\r\n\t    if (playerCiv.populationGrowthCost > resources.get('food').total) {\r\n\t        console.log(playerCiv.populationGrowthCost);\r\n\t        button.className = 'disabled pop-btn';\r\n\t        return false;\r\n\t    }\r\n\t    else {\r\n\t        console.log(playerCiv.populationGrowthCost);\r\n\t        button.className = 'pop-btn';\r\n\t        return true;\r\n\t    }\r\n\t}\r\n\tfunction UiSettingsButtons() {\r\n\t    // TODO: Remove eventlistener for horizontal scrolling\r\n\t    elt('.grid-button').addEventListener('click', function () {\r\n\t        elt('.clickopolis').style.width = '1200px';\r\n\t    });\r\n\t}\r\n\tfunction checkAchievements() {\r\n\t}\r\n\tfunction init() {\r\n\t    startGame();\r\n\t}\r\n\tinit();\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Utils = (function () {\r\n\t    function Utils() {\r\n\t    }\r\n\t    Utils.prototype.abbrNum = function (number, decPlaces) {\r\n\t        if (decPlaces === void 0) { decPlaces = 2; }\r\n\t        // 2 decimal places => 100, 3 => 1000, etc\r\n\t        decPlaces = Math.pow(10, decPlaces);\r\n\t        // Enumerate number abbreviations\r\n\t        var abbrev = [\"k\", \"m\", \"b\", \"t\"];\r\n\t        // Go through the array backwards, so we do the largest first\r\n\t        for (var i = abbrev.length - 1; i >= 0; i--) {\r\n\t            // Convert array index to \"1000\", \"1000000\", etc\r\n\t            var size = Math.pow(10, (i + 1) * 3);\r\n\t            // If the number is bigger or equal do the abbreviation\r\n\t            if (size <= number) {\r\n\t                // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n\t                // This gives us nice rounding to a particular decimal place.\r\n\t                number = Math.round(number * decPlaces / size) / decPlaces;\r\n\t                // Handle special case where we round up to the next abbreviation\r\n\t                if ((number == 1000) && (i < abbrev.length - 1)) {\r\n\t                    number = 1;\r\n\t                    i++;\r\n\t                }\r\n\t                // Add the letter for the abbreviation\r\n\t                number += abbrev[i];\r\n\t                // We are done... stop\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t        return number;\r\n\t    };\r\n\t    return Utils;\r\n\t}());\r\n\tmodule.exports = Utils;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Game = (function () {\r\n\t    function Game(introStep) {\r\n\t        this.introStep = introStep;\r\n\t        this.era = 'ancient';\r\n\t        this.year = 0;\r\n\t        this.time = 0;\r\n\t    }\r\n\t    return Game;\r\n\t}());\r\n\tmodule.exports = Game;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Civilization = (function () {\r\n\t    function Civilization(civName, leaderName, location) {\r\n\t        this.civName = civName;\r\n\t        this.leaderName = leaderName;\r\n\t        this.location = location;\r\n\t        this.leaderTraits = [];\r\n\t        this.leaderTraitsMax = 3;\r\n\t        this.happiness = 15;\r\n\t        this.anger = 1;\r\n\t        this.health = 25;\r\n\t        this.pollution = 1;\r\n\t        this.influence = 0;\r\n\t        this.legacy = 0;\r\n\t        this.achievements = 0;\r\n\t        this.goldenAgeProgress = 0;\r\n\t        this.goldenAgeGoal = 100000;\r\n\t        this.population = 1;\r\n\t        this.populationGrowthCost = 10;\r\n\t        this.populationReal = 1000;\r\n\t        this.cash = 0;\r\n\t        this.cashPM = 0;\r\n\t        this.research = 0;\r\n\t        this.researchPM = 0;\r\n\t        this.researchCost = 10;\r\n\t        this.researchingTechs = 'none';\r\n\t        this.techs = 0;\r\n\t        this.strength = 10;\r\n\t        this.defense = 10;\r\n\t    }\r\n\t    return Civilization;\r\n\t}());\r\n\tmodule.exports = Civilization;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Resource = (function () {\r\n\t    function Resource(name, perClick, perSecond, max, total, image, description) {\r\n\t        this.name = name;\r\n\t        this.perClick = perClick;\r\n\t        this.perSecond = perSecond;\r\n\t        this.max = max;\r\n\t        this.total = total;\r\n\t        this.image = image;\r\n\t        this.description = description;\r\n\t    }\r\n\t    return Resource;\r\n\t}());\r\n\tmodule.exports = Resource;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Resources = (function () {\r\n\t    function Resources(items) {\r\n\t        this.items = items;\r\n\t    }\r\n\t    Resources.prototype.push = function (resource) {\r\n\t        this.items.push(resource);\r\n\t    };\r\n\t    Resources.prototype.get = function (query) {\r\n\t        var r = this.items;\r\n\t        var ri;\r\n\t        for (var i = 0; i < r.length; i++) {\r\n\t            if (r[i].name === query) {\r\n\t                ri = r[i];\r\n\t            }\r\n\t        }\r\n\t        return ri;\r\n\t    };\r\n\t    return Resources;\r\n\t}());\r\n\tmodule.exports = Resources;\r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Citizen = (function () {\r\n\t    function Citizen(name, image, amount, description, foodContribution, prodContribution) {\r\n\t        this.name = name;\r\n\t        this.image = image;\r\n\t        this.amount = amount;\r\n\t        this.description = description;\r\n\t        this.foodContribution = foodContribution;\r\n\t        this.prodContribution = prodContribution;\r\n\t    }\r\n\t    return Citizen;\r\n\t}());\r\n\tmodule.exports = Citizen;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Citizens = (function () {\r\n\t    function Citizens(items) {\r\n\t        this.items = items;\r\n\t    }\r\n\t    Citizens.prototype.push = function (citizen) {\r\n\t        this.items.push(citizen);\r\n\t    };\r\n\t    Citizens.prototype.get = function (query) {\r\n\t        var c = this.items;\r\n\t        var ci;\r\n\t        for (var i = 0; i < c.length; i++) {\r\n\t            if (c[i].name === query) {\r\n\t                ci = c[i];\r\n\t            }\r\n\t        }\r\n\t        return ci;\r\n\t    };\r\n\t    return Citizens;\r\n\t}());\r\n\tmodule.exports = Citizens;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Tech = (function () {\r\n\t    function Tech(name, era, description, effects) {\r\n\t        this.name = name;\r\n\t        this.era = era;\r\n\t        //this.prerequisite = prequisite;\r\n\t        this.description = description;\r\n\t        this.effects = effects;\r\n\t        this.available = false;\r\n\t        this.purchased = false;\r\n\t        this.selected = false;\r\n\t    }\r\n\t    return Tech;\r\n\t}());\r\n\tmodule.exports = Tech;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Techs = (function () {\r\n\t    function Techs(items) {\r\n\t        this.items = items;\r\n\t    }\r\n\t    Techs.prototype.push = function (tech) {\r\n\t        this.items.push(tech);\r\n\t    };\r\n\t    Techs.prototype.get = function (query) {\r\n\t        var t = this.items;\r\n\t        var ti;\r\n\t        for (var i = 0; i < t.length; i++) {\r\n\t            if (t[i].name === query) {\r\n\t                ti = t[i];\r\n\t            }\r\n\t        }\r\n\t        return ti;\r\n\t    };\r\n\t    return Techs;\r\n\t}());\r\n\tmodule.exports = Techs;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Utils = __webpack_require__(2);\r\n\tvar u = new Utils();\r\n\tvar Templates = (function () {\r\n\t    function Templates() {\r\n\t        this.settingsScreen = \"\\n    <section class='clickopolis-intro'>\\n      <img class='clickopolis-logo custom-size-img' src='img/clickopolis-logo.png'>\\n      <p>Starting from the flames of the ancient world, you will progress steadily towards modernity&hellip;and beyond. You, the leader of a small faction of hunter-gatherers, have decided to settle\\n        <select id=\\\"location\\\">\\n          <option value=\\\"none\\\">select an option!</option>\\n          <option value=\\\"coast\\\">by the Coast</option>\\n          <option value=\\\"oasis\\\">in an Oasis</option>\\n          <option value=\\\"forest\\\">in a Forest</option>\\n          <option value=\\\"tundra\\\">in a Tundra</option>\\n          <option value=\\\"iceberg\\\">on an Iceberg</option>\\n        </select>\\n      </p>\\n      <p>Your name is <input type=\\\"text\\\" id=\\\"leaderName\\\" maxlength=\\\"10\\\" size=\\\"10\\\" placeholder=\\\"Jake\\\"> of <input type=\\\"text\\\" id=\\\"civName\\\" placeholder=\\\"Jaketopia\\\" maxlength=\\\"20\\\"></p>\\n      <p>You are a(n)\\n        <select id=\\\"trait\\\">\\n          <option value=\\\"aggressive\\\">aggressive</option>\\n          <option value=\\\"cosmpolitan\\\">cosmpolitan</option>\\n          <option value=\\\"daring\\\">daring</option>\\n          <option value=\\\"expansionist\\\">expansionist</option>\\n          <option value=\\\"industrious\\\">industrious</option>\\n          <option value=\\\"isolationist\\\">isolationist</option>\\n          <option value=\\\"pacifistic\\\">pacifistic</option>\\n          <option value=\\\"persuasive\\\">persuasive</option>\\n        </select>\\n       leader.</p>\\n\\n       <button class='begin-btn'>Begin Game!</button>\\n\\n    </section>\\n  \";\r\n\t    }\r\n\t    Templates.prototype.createStartScreen = function (playerCiv, game) {\r\n\t        var startScreen = \"\\n      <section class='clickopolis-intro'>\\n        <h1><img class='clickopolis-logo custom-size-img' alt='Clickopolis' src='img/clickopolis-logo.png'></h1>\\n        <div class=\\\"start-options\\\">\\n          <button class=\\\"large-btn start-btn load-btn\\\">Load Game...</button>\\n          <button class=\\\"large-btn start-btn new-btn\\\">New Game</button>\\n          <button class=\\\"large-btn start-btn current-btn\\\">\\n            <p class=\\\"current-game-heading\\\">Current Game: \" + playerCiv.leaderName + \" of \" + playerCiv.civName + \"</p>\\n            <p class='center-text'>\" + game.era + \" era</p>\\n            <p>\\n              <span>\\n                <img src=\\\"img/achievements.png\\\"> 5\\n              </span>\\n              <span>\\n                <img src=\\\"img/strength.png\\\"> 33\\n              </span>\\n              <span>\\n                <img src=\\\"img/defense.png\\\"> 44\\n              </span>\\n              <span>\\n                <img src=\\\"img/legacy.png\\\"> 2\\n              </span>\\n              <span>\\n                <img src=\\\"img/coin.png\\\"> 1K\\n              </span>\\n              <span>\\n                <img src=\\\"img/wonder.png\\\"> 1\\n              </span>\\n            </p>\\n          </button>\\n        </div>\\n        <!-- <button class='next-btn'>Next &rarr;</button> -->\\n      </section>\\n    \";\r\n\t        return startScreen;\r\n\t    };\r\n\t    ;\r\n\t    Templates.prototype.createResourcesScreen = function (playerCiv, resources) {\r\n\t        var resourcesScreen = \"\\n      <section class='screen resources-screen' id='resources'>\\n        <h2><img src='img/resources.png'> Resources</h2>\\n        <section class='resources-screen-inner'>\\n          <div class='panel food-panel'>\\n            <button class='food-btn'><img src='img/food-alt.png'> Grow Food</button>\\n\\n            <span class='resource-info r-food-pc' title='the amount of food you earn per click'>\" + resources.get('food').perClick + \" PC</span>\\n            <span class='resource-info r-food-ps' title='the amount of food you earn per second'>\" + resources.get('food').perSecond + \" PS</span>\\n            <span class='resource-info r-food-max'>\" + resources.get('food').max + \" max</span>\\n            <span class='resource-info r-food-total'>\" + resources.get('food').total + \" total</span>\\n\\n          </div>\\n          <div class='panel prod-panel'>\\n            <button class='prod-btn'><img src='img/prod.png'> Create Production</button>\\n\\n            <span class='resource-info' title='the amount of production you make per click'>\" + resources.get('prod').perClick + \" PC</span>\\n            <span class='resource-info' title='the amount of production you make per second'>\" + resources.get('prod').perSecond + \" PS</span>\\n            <span class='resource-info'>\" + resources.get('prod').max + \" max</span>\\n            <span class='resource-info r-prod-total'>\" + resources.get('prod').total + \" total</span>\\n\\n          </div>\\n\\n          <div class='panel location-panel'>\\n            <p>Biome (\" + playerCiv.location + \") Bonus: +10% <img src='img/food.png'> PC</p>\\n            <p>Secondary Biome (\" + playerCiv.location + \") Bonus: '????'</p>\\n          </div>\\n\\n\\n          <div class='panel resources-panel'>\\n            <span class='resource'>\\n              <img src='img/health.png'> Health\\n            </span>\\n\\n            <span class='resource' data-resource='fish'>\\n              <img src='img/fish.png'> <span>\" + resources.get('fish').total + \"</span>\\n            </span>\\n\\n            <span class='resource' data-resource='banana'>\\n              <img src='img/banana.png'> <span>\" + resources.get('banana').total + \"</span>\\n            </span>\\n\\n            <br>\\n\\n            <span class='resource'>\\n              <img src='img/buildings.png'> Building\\n            </span>\\n\\n            <span class='resource' data-resource='stone'>\\n              <img src='img/stone.png'> <span>\" + resources.get('stone').total + \"</span>\\n            </span>\\n\\n            <span class='resource' data-resource='iron'>\\n              <img src='img/iron.png'> <span>\" + resources.get('iron').total + \"</span>\\n            </span>\\n\\n\\n\\n            <br>\\n\\n            <span class='resource'>\\n              <img src='img/cavalry.png'> Strategic\\n            </span>\\n\\n            <span class='resource' data-resource='horse'>\\n              <img src='img/horse.png'> <span>\" + resources.get('horse').total + \"</span>\\n            </span>\\n\\n            <span class='resource' data-unlocked='false' data-resource='oil'>\\n              <img src='img/oil.png'> <span>\" + resources.get('oil').total + \"</span>\\n            </span>\\n\\n            <span class='resource' data-resource='uranium'>\\n              <img src='img/uranium.png'> <span>\" + resources.get('uranium').total + \"</span>\\n            </span>\\n\\n            <br>\\n\\n            <span class='resource'>\\n              <img src='img/crown.png'> Luxury\\n            </span>\\n\\n            <span class='resource' data-resource='spices'>\\n              <img src='img/spices.png'> <span>\" + resources.get('spices').total + \"</span>\\n            </span>\\n\\n            <span class='resource' data-resource='gold'>\\n              <img src='img/gold.png'> <span>\" + resources.get('gold').total + \"</span>\\n            </span>\\n\\n            <span class='resource' data-resource='gems'>\\n              <img src='img/gems.png'> <span>\" + resources.get('gems').total + \"</span>\\n            </span>\\n\\n            <br>\\n\\n            <span class='resource'>\\n              <img src='img/illuminati.png'> Power\\n            </span>\\n\\n            <span class='resource' data-resource='spaghetti'>\\n              <img src='img/spaghetti.png'> <span>\" + resources.get('spaghetti').total + \"</span>\\n            </span>\\n\\n            <span class='resource' data-resource='chihuahua'>\\n              <img src='img/chihuahua.png'> <span>\" + resources.get('chihuahua').total + \"</span>\\n            </span>\\n\\n          </div>\\n\\n\\n\\n        </section>\\n        <br>\\n        <section class='resource-screen-inner resource-info-screen'>\\n          <p>Click on a resource to recieve more information on it!</p>\\n        </section>\\n      </section>\\n    \";\r\n\t        return resourcesScreen;\r\n\t    };\r\n\t    Templates.prototype.createScreenHeader = function (playerCiv, game) {\r\n\t        var screenHeader = \"\\n      <header class='screen-header'>\\n        <h1>Clickopolis</h1>\\n        <h2>\" + playerCiv.leaderName + \" of \" + playerCiv.civName + \" &mdash; \" + game.era + \" era &mdash; <span class='game-year-text'>\" + game.year + \"</span> AC</h2>\\n      </header>\\n    \";\r\n\t        return screenHeader;\r\n\t    };\r\n\t    Templates.prototype.createCitizenScreen = function (playerCiv, citizens) {\r\n\t        var citizensScreen = \"\\n      <section class='screen citizens-screen' id='citizens'>\\n        <h2><img src='img/citizens.png'> Citizens</h2>\\n        <section class='citizens-screen-inner'>\\n          <p class='center-text'>Each citizen produces 1 <img src='img/coin.png'>, 2 <img src='img/research.png'>, 1 <img src='img/angry.png'>, and 1 <img src='img/pollution.png'></p>\\n          <p class='center-text'>Each citizen also consumes 1 <img src='img/food.png'> PS</p>\\n          <div class='row citizen-farmer'>\\n            <button data-citizen='farmer' data-citizen-amount=-1>-1</button>\\n            <span class='citizen-icon'><img src='img/farmer.png'></span>\\n            <button data-citizen='farmer' data-citizen-amount=1>+1</button>\\n            <span class='citizen-info'>\\n              Farmers: <strong class='farmer-num-text'>\" + citizens.get('farmer').amount + \"</strong> | Farmers provide +1 <img src='img/food.png'> PC and +.2 PC.\\n            </span>\\n          </div>\\n          <div class='row citizen-miner'>\\n            <button data-citizen='miner' data-citizen-amount='-1'>-1</button>\\n            <span class='citizen-icon'><img src='img/miner.png'></span>\\n            <button data-citizen='miner' data-citizen-amount='1'>+1</button>\\n            <span class='citizen-info'>\\n              Miners: <strong class='miner-num-text'>0</strong> | Miners provide +1 <img src='img/prod.png'> PC and +.2 PC.\\n            </span>\\n          </div>\\n          <div class='row citizen-soldier'>\\n            <button data-citizen-amount='-1'>-1</button>\\n            <span class='citizen-icon'><img src='img/soldier-alt.png'></span>\\n            <button data-citizen-amount='1'>+1</button>\\n            <span class='citizen-info'>\\n              Soldiers: <strong class='soldier-num-text'>0</strong> | Soldiers defend and fight for your empire. -3 <img src='img/coin.png'>\\n            </span>\\n          </div>\\n        </section>\\n      </section>\\n    \";\r\n\t        return citizensScreen;\r\n\t    };\r\n\t    Templates.prototype.createCivilizationScreen = function (playerCiv) {\r\n\t        var civilizationScreen = \"\\n      <section class='screen civilization-screen' id='civilization'>\\n        <h2><img src='img/empire.png'> Civilization</h2>\\n        <section class='civilization-screen-inner'>\\n          <div class='panel population-panel'>\\n            <button class='pop-btn'>+1 Population (<img src='img/food.png'> <span class='pop-growth-cost'>\" + playerCiv.populationGrowthCost + \"</span>)</button>\\n            <span class='civ-metric metric-population' title='\" + (playerCiv.populationReal + ' people') + \"'>Population: <img src='img/citizen.png'> <span class='population-text'>\" + playerCiv.population + \"</span></span>\\n          </div>\\n          <div class='panel civ-metric-panel'>\\n            <span class='civ-metric metric-happiness'>\\n              <img src='img/happy.png'> \" + playerCiv.happiness + \"\\n            </span>\\n            <span class='civ-metric metric-anger'>\\n              <img src='img/angry.png'> <span class='civ-anger-text'>\" + playerCiv.anger + \"</span>\\n            </span>\\n            <span class='civ-metric metric-health'>\\n              <img src='img/health.png'> \" + playerCiv.health + \"\\n            </span>\\n            <span class='civ-metric metric-pollution'>\\n              <img src='img/pollution.png'> <span class='civ-pollution-text'>\" + playerCiv.pollution + \"</span>\\n            </span>\\n            <span class='civ-metric metric-influence'>\\n              <img class='influence-img' src='img/influence.png'> \" + playerCiv.influence + \"\\n            </span>\\n            <span class='civ-metric metric-golden-age' title='Golden age points trigger Golden Ages. Points are earned by your happiness, minus anger.'>\\n              <img src='img/golden-age.png'> Golden Age Points <span class='golden-age-progress'>\" + playerCiv.goldenAgeProgress + \"</span> / <span class='golden-age-goal'>\" + u.abbrNum(playerCiv.goldenAgeGoal, 2) + \"</span>\\n            </span>\\n          </div>\\n        </section>\\n      </section>\\n    \";\r\n\t        return civilizationScreen;\r\n\t    };\r\n\t    Templates.prototype.createEconomyScreen = function (playerCiv) {\r\n\t        var economyScreen = \"\\n      <section class='screen economy-screen' id='economy'>\\n        <h2><img src='img/money.png'> Economy</h2>\\n        <section class='economy-screen-inner'>\\n          <div class='total-cash'>\\n            <img src='img/coin.png'> <span class='cash-text'>\" + playerCiv.cash + \"</span>\\n          </div>\\n          <span class='cash-breakdown'>\\n            <span class='cash-item'>From Citizens: <span class='cash-from-citizens'>0</span></span>\\n            <span class='cash-item'>From Trade Routes: <span class='cash-from-routes'>0</span></span>\\n            <span class='cash-item'>From Buildings: <span class='cash-from-buildings'>0</span></span>\\n            <span class='cash-item'>From Military: <span class='cash-from-military'>0</span></span>\\n            <span class='cash-item cash-item-total'>Per Minute: <span class='cash-PM'>\" + playerCiv.cashPM + \"</span></span>\\n          </span>\\n          <div class='trade-deal-history'>\\n            <table>\\n              <tr>\\n                <td colspan='4'><img src='img/trade-deal.png'> Trade Deal History</td>\\n              </tr>\\n              <tr>\\n                <td>Nation</td>\\n                <td>Gave...</td>\\n                <td>For...</td>\\n                <td>Year</td>\\n              </tr>\\n              <tr>\\n                <td>Ulonia</td>\\n                <td>10 <img src='img/horse.png'></td>\\n                <td>5 <img src='img/gold.png'></td>\\n                <td>25 AC</td>\\n              </tr>\\n            </table>\\n\\n\\n          </div>\\n        </section>\\n      </section>\\n    \";\r\n\t        return economyScreen;\r\n\t    };\r\n\t    Templates.prototype.createBuildingsScreen = function () {\r\n\t        var buildingsScreen = \"\\n      <section class='screen buildings-screen' id='buildings'>\\n        <h2><img src='img/buildings.png'> Buildings</h2>\\n        <section class='buildings-screen-inner'>\\n          <div class='panel buildings-mode'>\\n            <button class='purchase-mode-btn'>Purchase Mode</button>\\n          </div>\\n        </section>\\n        <section class='buildings-screen-inner'>\\n          <div class='building'>\\n            <span class='building-total' title='how many you own'>0</span>\\n            <span class='building-cost'><span class='building-cost-text'>15</span> <img src='img/prod.png'></span>\\n            <span class='building-name'>Hut</span>\\n            <span class='building-description'>A simple hut. Could use air conditioning.</span>\\n            <span class='building-effect'>+1 <img src='img/happy.png'></span>\\n          </div>\\n          <div class='building'>\\n            <span class='building-total' title='how many you own'>0</span>\\n            <span class='building-cost'><span class='building-cost-text'>25</span> <img src='img/prod.png'></span>\\n            <span class='building-name'>Granary</span>\\n            <span class='building-description'>A granary for storing food.</span>\\n            <span class='building-effect'>+200 <img src='img/food.png'> Max</span>\\n          </div>\\n        </section>\\n      </section>\\n    \";\r\n\t        return buildingsScreen;\r\n\t    };\r\n\t    Templates.prototype.createTechnologyScreen = function (playerCiv) {\r\n\t        var technologyScreen = \"\\n      <section class='screen technology-screen' id='technology'>\\n        <h2><img src='img/research.png'> Technology</h2>\\n        <section class='technology-screen-inner'>\\n          <div class='center-text current-research'>Currently researching towards: <span class='researching-techs'>\" + playerCiv.researchingTechs + \"</span></div>\\n          <div class='center-text research-exceeding'></div>\\n          <span class='research-text r-text'>\" + playerCiv.research + \"</span>\\n          <div class='research-progress-bar'></div>\\n          <span class='research-cost-text r-text'>\" + playerCiv.researchCost + \"</span>\\n        </section>\\n        <section class='technology-screen-inner search'>\\n          <input type='search' placeholder='filter...'>\\n          <span class='research-filters'>\\n            <label><input type='checkbox'>Show Unavailable Techs</label><br>\\n            <label><input type='checkbox'>Show Purchased Techs</label>\\n          </span>\\n        </section>\\n        <section class='technology-screen-inner technologies'>\\n          <span style='color:white;' class='center-text'>Press Ctrl + Click to deselect a tech.</span>\\n        </section>\\n      </section>\\n    \";\r\n\t        return technologyScreen;\r\n\t    };\r\n\t    Templates.prototype.createDiplomacyScreen = function (playerCiv) {\r\n\t        var diplomacyScreen = \"\\n    <section class='screen diplomacy-screen' id='diplomacy'>\\n      <h2>\\n        <img src='img/deal.png'> Diplomacy\\n      </h2>\\n      <section class='diplomacy-screen-inner'>\\n        <div class='diplomacy-summary'>\\n          Nations Met: <span class='nations-met-text'>25</span> &lozf;\\n          Nations Destroyed: <span class='nations-destroyed-text'>0</span> &lozf;\\n          Nations Absorbed: <span class='nations-absorbed-text'>0</span>\\n        </div>\\n      </section>\\n      <section class='diplomacy-screen-inner'>\\n        <div class='nation'>\\n          <div class='nation-header'>\\n            <div class='nation-name'>Entropia</div>\\n            <img class='nation-img' src='img/empire-4.png'>\\n            <button class='nation-interact-btn'>Interact</button>\\n          </div>\\n          <div class='nation-profile'>\\n            <p class='nation-description'>\\n              A technologically advanced nation ocuppied by religious exiles.\\n            </p>\\n            <div class='nation-metrics'>\\n              <img src='img/influence.png'> <span class='nation-influence-text'>12</span>\\n              <img src='img/strength.png'> <span class='nation-strength-text'>33</span>\\n              <img src='img/defense.png'> <span class='nation-defense-text'>23</span>\\n              <img src='img/coin.png'> <span class='nation-cash-text'>1.5K</span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class='nation'>\\n          <div class='nation-header' style='background: #6CDBE0;'>\\n            <div class='nation-name'>Arcopolis</div>\\n            <img class='nation-img' src='img/empire-8.png'>\\n            <button class='nation-interact-btn'>Interact</button>\\n          </div>\\n          <div class='nation-profile'>\\n            <p class='nation-description'>\\n              A seafaring nation prone to violence.\\n            </p>\\n            <div class='nation-metrics'>\\n              <img src='img/influence-alt.png'> <span class='nation-influence-text'>-4</span>\\n              <img src='img/strength.png'> <span class='nation-strength-text'>55</span>\\n              <img src='img/defense.png'> <span class='nation-defense-text'>68</span>\\n              <img src='img/coin.png'> <span class='nation-cash-text'>3.7K</span>\\n            </div>\\n          </div>\\n        </div>\\n      </section>\\n    </section>\\n    \";\r\n\t        return diplomacyScreen;\r\n\t    };\r\n\t    Templates.prototype.createMilitaryScreen = function (playerCiv) {\r\n\t        var militaryScreen = \"\\n      <section class='screen military-screen' id='military'>\\n        <h2>\\n          <img src='img/military.png'> Military\\n        </h2>\\n        <section class='military-screen-inner'>\\n          <span class='military-strength military-metric'><img src='img/strength.png'> Strength: <span class='military-strenght-text'>\" + playerCiv.strength + \"</span></span>\\n          <span class='military-defense military-metric'><img src='img/defense.png'> Defense: <span class='military-defense-text'>\" + playerCiv.defense + \"</span></span>\\n          <span class='military-soldiers military-metric'><img src='img/soldier.png'> Soldiers: <span class='military-soldiers-text'>0</span></span>\\n        </section>\\n        <section class='military-screen-inner'>\\n          <h3>Soldier Assignments</h3>\\n        </section>\\n        <section class='military-screen-inner'>\\n          <h3>Military Bases</h3>\\n        </section>\\n        <section class='military-screen-inner'>\\n          <h3>Military Operations</h3>\\n        </section>\\n      </section>\\n    \";\r\n\t        return militaryScreen;\r\n\t    };\r\n\t    Templates.prototype.createSettingsScreen = function (playerCiv, game) {\r\n\t        var settingsScreen = \"\\n      <section class='screen settings-screen' id='settings'>\\n        <h2>\\n          <img src='img/gear.png'> Settings\\n        </h2>\\n        <section class='settings-screen-inner'>\\n          <p><span class='settings-label'>Game Skin:</span>\\n            <select>\\n              <option>Ancient</option>\\n            </select>\\n          </p>\\n          <p><span class='settings-label'>UI:</span>\\n            <div class='ui-button horizontal-button'><img src='img/horizontal.png' title='horizontal'></div>\\n            <div class='ui-button grid-button'><img src='img/grid.png' title='grid'></div>\\n          </p>\\n        </section>\\n      </section>\\n    \";\r\n\t        return settingsScreen;\r\n\t    };\r\n\t    return Templates;\r\n\t}());\r\n\tmodule.exports = Templates;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tfunction notify(message) {\r\n\t    // TODO: create settimeout\r\n\t    var note = document.createElement('div');\r\n\t    note.className = 'notification';\r\n\t    note.textContent = message;\r\n\t    document.body.appendChild(note);\r\n\t    setTimeout(function () {\r\n\t        note.className = 'notification hidden';\r\n\t    }, 2500);\r\n\t}\r\n\tmodule.exports = notify;\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ad3e1926a1833d51c845\n **/","// <reference path=\"store.d.ts\" />\r\n// <reference path=\"underscore.d.ts\" />\r\n\r\nimport _ = require('underscore');\r\nimport Utils = require('./utils');\r\nimport Game = require('./game');\r\nimport Settings = require('./settings');\r\nimport Civilization = require('./civilization');\r\nimport Resource = require('./resource');\r\nimport Resources = require('./resources');\r\nimport Citizen = require('./citizen');\r\nimport Citizens = require('./citizens');\r\nimport Tech = require('./tech');\r\nimport Techs = require('./techs');\r\nimport Nation = require('./nation');\r\nimport Nations = require('./nations');\r\nimport Templates = require('./template');\r\nimport notify = require('./notify');\r\n\r\n\r\nlet game:Game = new Game(0);\r\nlet playerCiv:Civilization;\r\nlet templates:Templates = new Templates();\r\n\r\nlet food:Resource = new Resource('food', 1, 0, 1000, 0, 'food', 'Food.');\r\nlet prod:Resource = new Resource('prod', 1, 0, 2000, 0, 'prod', 'Prod.');\r\nlet stone:Resource = new Resource('stone', 0, 0, -1, 0, 'stone', 'Stones are important as a building block for buildings.');\r\nlet fish:Resource = new Resource('fish', 0, 0, -1, 0, 'fish', 'Fish are caught in nets by citizens periodically. Each fish provides +.5 <img src=\"img/health.png\"> Fish are a popular trade item with Desert nations.');\r\nlet banana:Resource = new Resource('banana', 0, 0, -1, 0, 'banana', 'Banana are harvested by farmers periodically. Each banana provides +.5 <img src=\"img/health.png\"> Banana are a popular trade item with Tundra nations.');\r\nlet spices:Resource = new Resource('spices', 0, 0, -1, 0, 'spices', 'Spices');\r\nlet gold:Resource = new Resource('gold', 0, 0, -1, 0, 'gold', 'Gold');\r\nlet gems:Resource = new Resource('gems', 0, 0, -1, 0, 'gems', 'Gemss');\r\nlet oil:Resource = new Resource('oil', 0, 0, -1, 0, 'oil', 'Oil');\r\nlet uranium:Resource = new Resource('uranium', 0, 0, -1, 0, 'uranium', 'Uranium');\r\nlet iron:Resource = new Resource('iron', 0, 0, -1, 0, 'iron', 'Iron');\r\nlet horse:Resource = new Resource('horse', 0, 0, -1, 0, 'horse', 'Horsies :]');\r\nlet spaghetti:Resource = new Resource('spaghetti', 0, 0, -1, 0, 'spaghetti', 'Spaghetts');\r\nlet chihuahua:Resource = new Resource('chihuahua', 0, 0, -1, 0, 'chihuahua', 'Bark!');\r\n\r\nlet resources:Resources = new Resources([food, prod, stone, fish, spices, banana, gold, gems, oil, iron, uranium, chihuahua, spaghetti, horse]);\r\n\r\nlet agriculture:Tech = new Tech('agriculture', 'ancient', 'a technology', ['+.2 <img src=\"img/food.png\"> PS per farmer', 'Unlocks: Animal Husbandry, Mining']);\r\nlet animalHusbandry:Tech = new Tech('animal husbandry', 'ancient', 'a tech', ['', '']);\r\nlet archery:Tech = new Tech('archery', 'ancient', 'Bow and arrow, hitting bone and marrow', ['Can assign Soldiers as Archers.', 'Can build Barracks.']);\r\nlet fishing:Tech = new Tech('fishing', 'ancient', 'Just make sure to use a Super Rod.', ['Unlocks <img src=\"img/fish.png\"> resource.', 'Unlocks: Sailing']);\r\nlet herbalMedicine:Tech = new Tech('herbal medicine', 'ancient', '', ['Can build Ascelpeia.', '+10 <img src=\"img/health.png\"> for discovering.']);\r\nlet masonry:Tech = new Tech('masonry', 'ancient', 'wububuu', ['', '']);\r\nlet mining:Tech = new Tech('mining', 'ancient', 'not safe for minors', ['+.2 <img src=\"img/prod.png\"> PS per miner', 'Unlocks: Masonry, Pottery']);\r\nlet mysticism:Tech = new Tech('mysticism', 'ancient', 'Mysterious gods bring riches, temples, and a couple blood sacrifices.', ['Can assign Clerics.', 'Can build Temples.', 'Can build Stonehenge.']);\r\nlet sailing:Tech = new Tech('sailing', 'ancient', 'It\\'s a lot harder to sail if you stay at half-mast!', ['Can assign soldiers as Navy.', 'Can meet Coastal and Oceanic Nations.']);\r\nlet trading:Tech = new Tech('trading', 'ancient', 'My six chickens for your goat?', ['Unlocks Bartering Economic System.', 'Can assign Merchants.']);\r\nlet woodworking:Tech = new Tech('woodworking', 'ancient', 'TIMBER!!!', ['Unlocks <img src=\"img/spices.png\"> resources.', 'Can assign Woodcutters.']);\r\nlet writing:Tech = new Tech('writing', 'ancient', 'Allows poorly written fanfiction in Information era.', ['Unlocks Diplomacy.', 'Can build Library.']);\r\n\r\n\r\nlet techs:Techs = new Techs([agriculture,\r\n                            animalHusbandry,\r\n                            archery,\r\n                            fishing,\r\n                            herbalMedicine,\r\n                            masonry,\r\n                            mining,\r\n                            mysticism,\r\n                            sailing,\r\n                            trading,\r\n                            woodworking,\r\n                            writing]);\r\n\r\nlet farmer:Citizen = new Citizen('farmer', 'farmer', 0, 'a farmer', 1, 0);\r\nlet miner:Citizen = new Citizen('miner', 'miner', 0, 'a miner', 1, 0);\r\nlet soldier:Citizen = new Citizen('soldier', 'soldier', 0, 'a soldier', 1, 0);\r\n\r\nlet citizens:Citizens = new Citizens([farmer, miner, soldier]);\r\n\r\nlet u = new Utils();\r\n\r\nlet isWindowActive:boolean = true;\r\nlet isCtrlPressed:boolean = false;\r\n\r\nwindow.addEventListener('focus', function () {\r\n  isWindowActive = true;\r\n});\r\n\r\nwindow.addEventListener('blur', function () {\r\n  isWindowActive = false;\r\n});\r\n\r\ndocument.addEventListener('keydown', function (event:any) {\r\n  if (event.which === 17) {\r\n    isCtrlPressed = true;\r\n  }\r\n})\r\n\r\nfunction saveGame():void {\r\n  store.set('game', game);\r\n  store.get('game');\r\n}\r\n\r\n\r\nfunction savePlayer():void {\r\n  store.set('playerCiv', playerCiv);\r\n  console.log(store.get('playerCiv'));\r\n}\r\n\r\nfunction removeItem(arr:any[], item:any) {\r\n  for (var i = arr.length - 1; i--;) {\r\n    if (arr[i] === item) arr.splice(i, 1);\r\n  }\r\n}\r\n\r\nfunction abbrNum (number:any, decPlaces:number) {\r\n    // 2 decimal places => 100, 3 => 1000, etc\r\n    decPlaces = Math.pow(10,decPlaces);\r\n    // Enumerate number abbreviations\r\n    var abbrev = [ \"k\", \"m\", \"b\", \"t\" ];\r\n    // Go through the array backwards, so we do the largest first\r\n    for (var i=abbrev.length-1; i>=0; i--) {\r\n        // Convert array index to \"1000\", \"1000000\", etc\r\n        var size = Math.pow(10,(i+1)*3);\r\n        // If the number is bigger or equal do the abbreviation\r\n        if(size <= number) {\r\n             // Here, we multiply by decPlaces, round, and then divide by decPlaces.\r\n             // This gives us nice rounding to a particular decimal place.\r\n             number = Math.round(number*decPlaces/size)/decPlaces;\r\n             // Handle special case where we round up to the next abbreviation\r\n             if((number == 1000) && (i < abbrev.length - 1)) {\r\n                 number = 1;\r\n                 i++;\r\n             }\r\n             // Add the letter for the abbreviation\r\n             number += abbrev[i];\r\n             // We are done... stop\r\n             break;\r\n        }\r\n    }\r\n\r\n    return number;\r\n};\r\n\r\nfunction time(d:number) {\r\n  var h = Math.floor(d / 3600);\r\n  var m = Math.floor(d % 3600 / 60);\r\n  var s = Math.floor(d % 3600 % 60);\r\n  return ((h > 0 ? h + \":\" + (m < 10 ? \"0\" : \"\") : \"\") + m + \":\" + (s < 10 ? \"0\" : \"\") + s);\r\n};\r\n\r\nfunction choose(arr:any[]) {\r\n  return arr[Math.floor(Math.random()*arr.length)];\r\n}\r\n\r\nfunction prepend(node:any, html:string) {\r\n  let el = <HTMLElement>document.querySelector(node);\r\n  el.insertAdjacentHTML('beforeend', html);\r\n}\r\n\r\nfunction append(node:any, html:string) {\r\n  let el = <HTMLElement>document.querySelector(node);\r\n  el.insertAdjacentHTML('afterend', html);\r\n}\r\n\r\nfunction bindElement(node:string, eventType:string, callback:Function) {\r\n  let el = <HTMLElement>document.querySelector(node);\r\n  el.addEventListener(eventType, function( event ) {\r\n    console.log(callback)\r\n    return callback();\r\n  });\r\n}\r\n\r\nfunction hideElement(element:HTMLElement) {\r\n  element = <HTMLElement>element;\r\n  element.className += \" hidden\";\r\n}\r\n\r\nfunction removeElement(element:HTMLElement) {\r\n  element = <HTMLElement>element;\r\n  element.remove();\r\n}\r\n\r\nfunction elt(query:string, all:boolean = false):any {\r\n  if (all === false)\r\n    return <HTMLElement>document.querySelector(query);\r\n  else\r\n    return <NodeListOf<HTMLElement>>document.querySelectorAll(query);\r\n}\r\n\r\nfunction startGame() {\r\n  if (store.get('playerCiv') !== undefined) {\r\n    let loadCiv = store.get('playerCiv');\r\n    playerCiv = new Civilization(loadCiv.civName, loadCiv.leaderName, loadCiv.location);\r\n    startSavedGame();\r\n  } else {\r\n    startNewGame();\r\n    playerCiv = new Civilization('', '', '');\r\n  }\r\n}\r\n\r\nfunction startSavedGame() {\r\n  console.debug(\"Loading Saved Game...\");\r\n  append('body', templates.createStartScreen(playerCiv, game));\r\n  //store.clear();\r\n\r\n  bindElement('.load-btn', 'click', function() {\r\n    createGameUI();\r\n  });\r\n\r\n  bindElement('.current-btn', 'click', function() {\r\n    createGameUI();\r\n  });\r\n};\r\n\r\n\r\nfunction startNewGame() {\r\n  console.debug(\"Starting New Game...\");\r\n\r\n  append('body', templates.settingsScreen);\r\n\r\n  // bindElement('.new-btn', 'click', function () {\r\n  //   console.log('Hey...is this thing working??');\r\n  // });\r\n\r\n  bindElement('.begin-btn', 'click', function() {\r\n    //console.log('hi');\r\n    setPlayerCiv();\r\n    createGameUI();\r\n  });\r\n\r\n  document.querySelector('#trait').addEventListener('change', function() {\r\n    traitsSelection(0);\r\n  });\r\n\r\n\r\n};\r\n\r\nfunction setPlayerCiv() {\r\n  let civNameInput = <HTMLInputElement>document.querySelector('#civName'),\r\n      leaderNameInput = <HTMLInputElement>document.querySelector('#leaderName'),\r\n      location = <HTMLSelectElement>document.querySelector('#location');\r\n  playerCiv.civName = civNameInput.value;\r\n  playerCiv.leaderName = leaderNameInput.value;\r\n  playerCiv.location = location.value;\r\n  savePlayer();\r\n}\r\n\r\n\r\n\r\nfunction traitsSelection(index:number) {\r\n  let traitSelect = <HTMLSelectElement>document.querySelector('#trait');\r\n  let trait = traitSelect.value;\r\n  playerCiv.leaderTraits[index] = trait;\r\n  console.log(traitSelect.value, playerCiv.leaderTraits);\r\n  savePlayer();\r\n}\r\n\r\nfunction createGameUI() {\r\n  let intro = <HTMLElement>document.querySelector('.clickopolis-intro');\r\n  let clickopolisGame = document.createElement('section');\r\n  clickopolisGame.innerHTML = '';\r\n\r\n  clickopolisGame.setAttribute('class', 'clickopolis');\r\n  clickopolisGame.setAttribute('id', 'clickopolis');\r\n\r\n  drawUI(clickopolisGame);\r\n\r\n\r\n  intro != undefined ? intro.remove() : console.log('intro not defined');\r\n\r\n  document.body.appendChild(clickopolisGame);\r\n  //append('body', templates.resourcesScreen);\r\n\r\n  bindElement('.food-btn', 'click', function () {\r\n    event.preventDefault();\r\n    addClickToTotal('.r-food-total', 'food');\r\n    checkPopulationGrowthCost();\r\n  });\r\n\r\n  bindElement('.prod-btn', 'click', function () {\r\n    event.preventDefault();\r\n    addClickToTotal('.r-prod-total', 'prod');\r\n    checkPopulationGrowthCost();\r\n  });\r\n\r\n  resourceClick();\r\n\r\n  bindElement('.pop-btn', 'click', function () {\r\n    event.preventDefault();\r\n    let popGrowthCost = document.querySelector('.pop-growth-cost');\r\n    let populationText = document.querySelector('.population-text');\r\n    resources.get('food').total -= playerCiv.populationGrowthCost;\r\n    playerCiv.population += 1;\r\n    playerCiv.populationGrowthCost = Math.round(playerCiv.populationGrowthCost * playerCiv.population * .9);\r\n\r\n    populationText.textContent = playerCiv.population.toString();\r\n    popGrowthCost.textContent = playerCiv.populationGrowthCost.toString();\r\n\r\n    updatePopulation(1);\r\n\r\n    checkPopulationGrowthCost();\r\n\r\n    notify('Your population just grew, unlocking more possibilities!');\r\n\r\n  });\r\n\r\n  setInfluenceImage();\r\n\r\n  populateTechnologies();\r\n\r\n  citizenClick();\r\n\r\n  techClick();\r\n\r\n  UiSettingsButtons();\r\n\r\n}\r\n\r\nfunction updatePopulation(pop:number) {\r\n  playerCiv.cashPM += pop * 1;\r\n  playerCiv.researchPM += pop * 2;\r\n  playerCiv.anger += pop * 1;\r\n  playerCiv.pollution += pop * 1;\r\n\r\n  //elt('.research-text').textContent = playerCiv.research.toString();\r\n  elt('.cash-PM').textContent = playerCiv.cashPM;\r\n  elt('.civ-anger-text').textContent = playerCiv.anger;\r\n  elt('.civ-pollution-text').textContent = playerCiv.pollution;\r\n\r\n}\r\n\r\nfunction addClickToTotal(el:string, item:string) {\r\n  let element = elt(el);\r\n  if (resources.get(item).total >= resources.get(item).max) resources.get(item).total = resources.get(item).max;\r\n  else resources.get(item).total += resources.get(item).perClick;\r\n\r\n  element.innerHTML = resources.get(item).total.toString() + ' total';\r\n}\r\n\r\nsetInterval(function() {\r\n  if (isWindowActive) {\r\n    if (resources.get('food').total >= resources.get('food').max) resources.get('food').total = resources.get('food').max;\r\n    else resources.get('food').total += resources.get('food').perSecond;\r\n    elt('.r-food-total').textContent = resources.get('food').total.toString() + ' total';\r\n\r\n    if (resources.get('prod').total >= resources.get('prod').max) resources.get('prod').total = resources.get('prod').max;\r\n    else resources.get('food').total += resources.get('prod').perSecond;\r\n    elt('.r-prod-total').textContent = resources.get('prod').total.toString() + ' total';\r\n\r\n    updateTime();\r\n    addGoldenAgePoints();\r\n    addCash();\r\n    addResearchPoints();\r\n    checkPopulationGrowthCost();\r\n  }\r\n}, 1000);\r\n\r\nsetInterval(function() {\r\n  if (isWindowActive) {\r\n     updateYear();\r\n\r\n\r\n  }\r\n}, 1000 * 60);\r\n\r\nfunction drawUI(el:HTMLElement) {\r\n  el.innerHTML =  templates.createScreenHeader(playerCiv, game) +\r\n                  templates.createResourcesScreen(playerCiv, resources) +\r\n                  templates.createCivilizationScreen(playerCiv) +\r\n                  templates.createCitizenScreen(playerCiv, citizens) +\r\n                  templates.createEconomyScreen(playerCiv) +\r\n                  templates.createBuildingsScreen() +\r\n                  templates.createTechnologyScreen(playerCiv) +\r\n                  templates.createDiplomacyScreen(playerCiv) +\r\n                  templates.createMilitaryScreen(playerCiv) +\r\n                  templates.createSettingsScreen(playerCiv, game);\r\n\r\n}\r\n\r\nfunction populateTechnologies() {\r\n  let technologies = document.querySelector('.technologies');\r\n  console.debug(\"tech element\", technologies);\r\n\r\n  for (let i = 0; i < techs.items.length; i++) {\r\n    let t = techs.items[i];\r\n    console.log(techs.items[i]);\r\n    technologies.innerHTML += `\r\n    <div class='tech' data-tech='${t.name}' data-selected=${t.selected} data-purchased=${t.purchased}>\r\n      <span class='tech-name'>${t.name}</span>\r\n      <span class='tech-description'>${t.description}</span>\r\n      <ul class='tech-list'>\r\n        <li>${t.effects[0]}</li>\r\n        <li>${t.effects[1]}</li>\r\n      </ul>\r\n    </div>`;\r\n  }\r\n\r\n}\r\n\r\nfunction updateYear() {\r\n  game.year += 1;\r\n  elt('.game-year-text').textContent = game.year;\r\n}\r\n\r\nfunction updateTime() {\r\n  game.time += 1;\r\n  elt('.game-year-text').title = time(game.time);\r\n}\r\n\r\nfunction addGoldenAgePoints() {\r\n  let goldenAgeProgress = elt('.golden-age-progress');\r\n  let goldenAgeMeter = elt('.metric-golden-age');\r\n  let goldenAgePoints = playerCiv.happiness - playerCiv.anger;\r\n  playerCiv.goldenAgeProgress += goldenAgePoints;\r\n  goldenAgeProgress.textContent = u.abbrNum(playerCiv.goldenAgeProgress);\r\n\r\n  let goldenAgePercent:string = ((playerCiv.goldenAgeProgress / goldenAgePoints) / 100) + '%';\r\n  let bgString:string = `linear-gradient(to right, #BDBD6C 0%, #BDBD6C ${goldenAgePercent}, #222 ${goldenAgePercent}, #222)`;\r\n  goldenAgeMeter.style.background = bgString;\r\n}\r\n\r\nfunction addResearchPoints() {\r\n  playerCiv.research += playerCiv.researchPM / 60;\r\n\r\n  elt('.research-text').textContent = abbrNum(playerCiv.research.toFixed(1), 2);\r\n\r\n  let researchPercent:string = ((playerCiv.research / playerCiv.researchCost) * 100) + '%';\r\n\r\n  let bgString:string = `linear-gradient(to right, #83D4D4 0%, #83D4D4 ${researchPercent}, #444 ${researchPercent}, #444 100%)`;\r\n  elt('.research-progress-bar').style.background = bgString;\r\n\r\n  if (playerCiv.research > playerCiv.researchCost) {\r\n    elt('.research-exceeding').textContent = 'You are currently exceeding your current tech goal.';\r\n  } else {\r\n    elt('.research-exceeding').textContent = '';\r\n  }\r\n}\r\n\r\nfunction addCash() {\r\n  playerCiv.cash += playerCiv.cashPM / 60;\r\n  let cashText = elt('.cash-text');\r\n  cashText.textContent = playerCiv.cash.toFixed(2);\r\n}\r\n\r\nfunction setInfluenceImage() {\r\n  if (playerCiv.influence >= 0) {\r\n    elt('.influence-img').src = 'img/influence.png';\r\n  } else {\r\n    elt('.influence-img').src = 'img/influence-alt.png';\r\n  }\r\n}\r\n\r\nfunction resourceClick() {\r\n  let resourceButtons = <NodeListOf<HTMLElement>>document.querySelectorAll('.resource');\r\n  [].forEach.call(resourceButtons, function (item:any) {\r\n    item.addEventListener('click', function () {\r\n      item.className = \"resource\";\r\n      let name = this.getAttribute('data-resource');\r\n      let r = resources.get(name);\r\n      if (this.className === \"resource active\") {\r\n        this.className = \"resource\";\r\n      } else {\r\n        this.className += \" active\";\r\n        elt('.resource-info-screen').innerHTML = `\r\n          <h3><img src='img/${r.image}.png'> ${r.name}<br></h3>\r\n          <p>${r.description}</p>\r\n        `;\r\n      }\r\n      showResourceInfo(name);\r\n    });\r\n  });\r\n}\r\n\r\nfunction citizenClick() {\r\n  let citizenButtons = <NodeListOf<HTMLElement>>document.querySelectorAll('button[data-citizen]');\r\n  [].forEach.call(citizenButtons, function (item:any) {\r\n    item.addEventListener('click', function () {\r\n      let citizen:string = this.getAttribute('data-citizen');\r\n      let sel:string = '.' + citizen + '-num-text';\r\n\r\n      console.log(citizens.get(citizen).amount);\r\n\r\n      console.log(this.getAttribute('data-citizen-amount'));\r\n\r\n      citizens.get(citizen).amount += <number>this.getAttribute('data-citizen-amount');\r\n\r\n      console.log(citizens.get(citizen).amount);\r\n\r\n      elt(sel).textContent = citizens.get(citizen).amount;\r\n\r\n      console.log(elt(sel).textContent);\r\n\r\n\r\n      // console.log(this.getAttribute('data-citizen-amount'));\r\n      // console.log(citizens.get(this.getAttribute('data-citizen')));\r\n      // elt(this.getAttribute('data-citizen') + '-num-text').textContent = citizens.get(this.getAttribute('data-citizen')).amount + 1;\r\n    });\r\n  });\r\n}\r\n\r\nfunction techClick() {\r\n  let techEls = <NodeListOf<HTMLElement>>document.querySelectorAll('.tech');\r\n  [].forEach.call(techEls, function (item:any) {\r\n    item.addEventListener('click', function () {\r\n      let tech = item.getAttribute('data-tech');\r\n      let selected = item.getAttribute('data-selected');\r\n      if (isCtrlPressed) {\r\n        if (techs.get(tech).selected) {\r\n          techs.get(tech).selected = false;\r\n          item.setAttribute('data-selected', false);\r\n        }\r\n      } else {\r\n        techs.get(tech).selected = true;\r\n        console.log(techs.get(tech).selected);\r\n        item.setAttribute('data-selected', true);\r\n        if (techs.get(tech).selected) {\r\n          // TODO: fix this mess\r\n          elt('.researching-techs').textContent = techs.get(tech).name;\r\n        }\r\n      }\r\n\r\n    })\r\n  });\r\n}\r\n\r\nfunction showResourceInfo(name:string) {\r\n  console.log(name);\r\n}\r\n\r\nfunction checkPopulationGrowthCost() {\r\n  let button = document.querySelector('.pop-btn');\r\n  if (playerCiv.populationGrowthCost > resources.get('food').total) {\r\n    console.log(playerCiv.populationGrowthCost);\r\n    button.className = 'disabled pop-btn';\r\n    return false;\r\n  } else {\r\n    console.log(playerCiv.populationGrowthCost);\r\n    button.className = 'pop-btn';\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nfunction UiSettingsButtons() {\r\n  // TODO: Remove eventlistener for horizontal scrolling\r\n  elt('.grid-button').addEventListener('click', function () {\r\n    elt('.clickopolis').style.width = '1200px';\r\n  });\r\n}\r\n\r\n\r\nfunction checkAchievements() {\r\n\r\n}\r\n\r\n\r\n\r\nfunction init() {\r\n  startGame();\r\n}\r\n\r\ninit();\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/index.ts\n **/","class Utils {\n  abbrNum (number:any, decPlaces:number = 2) {\n      // 2 decimal places => 100, 3 => 1000, etc\n      decPlaces = Math.pow(10,decPlaces);\n      // Enumerate number abbreviations\n      var abbrev = [ \"k\", \"m\", \"b\", \"t\" ];\n      // Go through the array backwards, so we do the largest first\n      for (var i=abbrev.length-1; i>=0; i--) {\n          // Convert array index to \"1000\", \"1000000\", etc\n          var size = Math.pow(10,(i+1)*3);\n          // If the number is bigger or equal do the abbreviation\n          if(size <= number) {\n               // Here, we multiply by decPlaces, round, and then divide by decPlaces.\n               // This gives us nice rounding to a particular decimal place.\n               number = Math.round(number*decPlaces/size)/decPlaces;\n               // Handle special case where we round up to the next abbreviation\n               if((number == 1000) && (i < abbrev.length - 1)) {\n                   number = 1;\n                   i++;\n               }\n               // Add the letter for the abbreviation\n               number += abbrev[i];\n               // We are done... stop\n               break;\n          }\n      }\n\n      return number;\n  }\n}\n\nexport = Utils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/utils.ts\n **/","class Game {\r\n  introStep: number;\r\n  restarts: number;\r\n  legacyPoints: number;\r\n  era: string;\r\n  year: number;\r\n  time: number;\r\n\r\n  constructor(introStep: number) {\r\n    this.introStep = introStep;\r\n    this.era = 'ancient';\r\n    this.year = 0;\r\n    this.time = 0;\r\n  }\r\n}\r\n\r\nexport = Game;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/game.ts\n **/","class Civilization {\r\n  civName: string;\r\n\r\n  leaderName: string;\r\n  leaderTraits: string[];\r\n  leaderTraitsMax: number;\r\n\r\n  location: string;\r\n\r\n  happiness: number;\r\n  anger: number;\r\n  health: number;\r\n  pollution: number;\r\n  influence: number;\r\n  legacy: number;\r\n\r\n  population: number;\r\n  populationGrowthCost: number;\r\n  populationReal: number;\r\n\r\n  achievements: number;\r\n\r\n  cash: number;\r\n  cashPM: number;\r\n\r\n  goldenAges: number;\r\n  goldenAgeProgress: number;\r\n  goldenAgeGoal: number;\r\n  goldenAgeMult: number;\r\n\r\n  research: number;\r\n  researchPM: number;\r\n  researchCost: number;\r\n  researchingTechs: string;\r\n\r\n  techs: number;\r\n\r\n  strength: number;\r\n  defense: number;\r\n\r\n\r\n  conquestedCivs: Civilization[];\r\n\r\n  constructor(civName:string, leaderName:string, location:string) {\r\n    this.civName = civName;\r\n    this.leaderName = leaderName;\r\n    this.location = location;\r\n\r\n    this.leaderTraits = [];\r\n    this.leaderTraitsMax = 3;\r\n\r\n    this.happiness = 15;\r\n    this.anger = 1;\r\n    this.health = 25;\r\n    this.pollution = 1;\r\n    this.influence = 0;\r\n    this.legacy = 0;\r\n\r\n    this.achievements = 0;\r\n\r\n    this.goldenAgeProgress = 0;\r\n    this.goldenAgeGoal = 100000;\r\n\r\n    this.population = 1;\r\n    this.populationGrowthCost = 10;\r\n    this.populationReal = 1000;\r\n\r\n    this.cash = 0;\r\n    this.cashPM = 0;\r\n\r\n    this.research = 0;\r\n    this.researchPM = 0;\r\n    this.researchCost = 10;\r\n    this.researchingTechs = 'none';\r\n\r\n    this.techs = 0;\r\n\r\n    this.strength = 10;\r\n    this.defense = 10;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport = Civilization;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/civilization.ts\n **/","class Resource {\r\n  name: string;\r\n  perClick: number;\r\n  perSecond: number;\r\n  max: number;\r\n  total: number;\r\n  image: string;\r\n  description: string;\r\n\r\n  unlocked: boolean;\r\n  visible: boolean;\r\n\r\n  foodBonus: number;\r\n  prodBonus: number;\r\n  healthBonus: number;\r\n  pollutionBonus: number;\r\n  influenceBonus: number;\r\n  faithBonus: number;\r\n\r\n  exchangeRate: number;\r\n\r\n  constructor(name:string, perClick:number, perSecond:number, max:number, total:number, image:string, description: string) {\r\n    this.name = name;\r\n    this.perClick = perClick;\r\n    this.perSecond = perSecond;\r\n    this.max = max;\r\n    this.total = total;\r\n    this.image = image;\r\n    this.description = description;\r\n  }\r\n\r\n}\r\n\r\nexport = Resource;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/resource.ts\n **/","import Resource = require('./resource');\r\n\r\nclass Resources {\r\n  items:Resource[];\r\n\r\n  push(resource:Resource) {\r\n    this.items.push(resource);\r\n  }\r\n\r\n  get(query:string):Resource {\r\n    let r = this.items;\r\n    let ri:Resource;\r\n\r\n    for (let i = 0; i < r.length; i++) {\r\n      if (r[i].name === query) {\r\n        ri = r[i];\r\n      }\r\n    }\r\n\r\n    return ri;\r\n\r\n  }\r\n\r\n  constructor(items:Resource[]) {\r\n    this.items = items;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport = Resources;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/resources.ts\n **/","class Citizen {\r\n  name: string;\r\n  image: string;\r\n  amount: number;\r\n  description: string;\r\n  foodContribution: number;\r\n  prodContribution: number;\r\n\r\n  healthContribution: number;\r\n  pollutionContribution: number;\r\n  happinessContribution: number;\r\n  angerContribution: number;\r\n\r\n  scienceContribution: number;\r\n  influenceContribution: number;\r\n\r\n  constructor(name:string, image:string, amount: number, description: string, foodContribution: number, prodContribution: number) {\r\n    this.name = name;\r\n    this.image = image;\r\n    this.amount = amount;\r\n    this.description = description;\r\n    this.foodContribution = foodContribution;\r\n    this.prodContribution = prodContribution;\r\n  }\r\n}\r\n\r\nexport = Citizen;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/citizen.ts\n **/","import Citizen = require('./citizen');\r\n\r\nclass Citizens {\r\n  items:Citizen[];\r\n\r\n  push(citizen:Citizen) {\r\n    this.items.push(citizen);\r\n  }\r\n\r\n  get(query:string):Citizen {\r\n    let c = this.items;\r\n    let ci:Citizen;\r\n\r\n    for (let i = 0; i < c.length; i++) {\r\n      if (c[i].name === query) {\r\n        ci = c[i];\r\n      }\r\n    }\r\n\r\n    return ci;\r\n\r\n  }\r\n\r\n  constructor(items: Citizen[]) {\r\n    this.items = items;\r\n  }\r\n}\r\n\r\nexport = Citizens;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/citizens.ts\n **/","class Tech {\r\n  name: string;\r\n  era: string;\r\n  available: boolean;\r\n  purchased: boolean;\r\n  selected: boolean;\r\n  prerequisite: Tech[];\r\n  description: string;\r\n  effects: string[];\r\n\r\n  constructor(name: string, era: string, description: string, effects: string[]) {\r\n    this.name = name;\r\n    this.era = era;\r\n    //this.prerequisite = prequisite;\r\n    this.description = description;\r\n    this.effects = effects;\r\n\r\n    this.available = false;\r\n    this.purchased = false;\r\n    this.selected = false;\r\n  }\r\n}\r\n\r\nexport = Tech;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/tech.ts\n **/","import Tech = require('./tech');\r\n\r\nclass Techs {\r\n  items: Tech[];\r\n\r\n\r\n  push(tech:Tech) {\r\n    this.items.push(tech);\r\n  }\r\n\r\n  get(query:string):Tech {\r\n    let t = this.items;\r\n    let ti:Tech;\r\n\r\n    for (let i = 0; i < t.length; i++) {\r\n      if (t[i].name === query) {\r\n        ti = t[i];\r\n      }\r\n    }\r\n\r\n    return ti;\r\n  }\r\n\r\n  constructor(items:Tech[]) {\r\n    this.items = items;\r\n  }\r\n}\r\n\r\nexport = Techs;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/techs.ts\n **/","import Game = require('./game');\r\nimport Civilization = require('./civilization');\r\nimport Resource = require('./resource');\r\nimport Resources = require('./resources');\r\nimport Citizen = require('./citizen');\r\nimport Citizens = require('./citizens');\r\nimport Utils = require('./utils');\r\n\r\nlet u = new Utils();\r\n\r\nclass Templates {\r\n\r\n  createStartScreen(playerCiv:Civilization, game:Game) {\r\n\r\n    let startScreen = `\r\n      <section class='clickopolis-intro'>\r\n        <h1><img class='clickopolis-logo custom-size-img' alt='Clickopolis' src='img/clickopolis-logo.png'></h1>\r\n        <div class=\"start-options\">\r\n          <button class=\"large-btn start-btn load-btn\">Load Game...</button>\r\n          <button class=\"large-btn start-btn new-btn\">New Game</button>\r\n          <button class=\"large-btn start-btn current-btn\">\r\n            <p class=\"current-game-heading\">Current Game: ${playerCiv.leaderName} of ${playerCiv.civName}</p>\r\n            <p class='center-text'>${game.era} era</p>\r\n            <p>\r\n              <span>\r\n                <img src=\"img/achievements.png\"> 5\r\n              </span>\r\n              <span>\r\n                <img src=\"img/strength.png\"> 33\r\n              </span>\r\n              <span>\r\n                <img src=\"img/defense.png\"> 44\r\n              </span>\r\n              <span>\r\n                <img src=\"img/legacy.png\"> 2\r\n              </span>\r\n              <span>\r\n                <img src=\"img/coin.png\"> 1K\r\n              </span>\r\n              <span>\r\n                <img src=\"img/wonder.png\"> 1\r\n              </span>\r\n            </p>\r\n          </button>\r\n        </div>\r\n        <!-- <button class='next-btn'>Next &rarr;</button> -->\r\n      </section>\r\n    `;\r\n    return startScreen;\r\n  };\r\n\r\n  settingsScreen:string = `\r\n    <section class='clickopolis-intro'>\r\n      <img class='clickopolis-logo custom-size-img' src='img/clickopolis-logo.png'>\r\n      <p>Starting from the flames of the ancient world, you will progress steadily towards modernity&hellip;and beyond. You, the leader of a small faction of hunter-gatherers, have decided to settle\r\n        <select id=\"location\">\r\n          <option value=\"none\">select an option!</option>\r\n          <option value=\"coast\">by the Coast</option>\r\n          <option value=\"oasis\">in an Oasis</option>\r\n          <option value=\"forest\">in a Forest</option>\r\n          <option value=\"tundra\">in a Tundra</option>\r\n          <option value=\"iceberg\">on an Iceberg</option>\r\n        </select>\r\n      </p>\r\n      <p>Your name is <input type=\"text\" id=\"leaderName\" maxlength=\"10\" size=\"10\" placeholder=\"Jake\"> of <input type=\"text\" id=\"civName\" placeholder=\"Jaketopia\" maxlength=\"20\"></p>\r\n      <p>You are a(n)\r\n        <select id=\"trait\">\r\n          <option value=\"aggressive\">aggressive</option>\r\n          <option value=\"cosmpolitan\">cosmpolitan</option>\r\n          <option value=\"daring\">daring</option>\r\n          <option value=\"expansionist\">expansionist</option>\r\n          <option value=\"industrious\">industrious</option>\r\n          <option value=\"isolationist\">isolationist</option>\r\n          <option value=\"pacifistic\">pacifistic</option>\r\n          <option value=\"persuasive\">persuasive</option>\r\n        </select>\r\n       leader.</p>\r\n\r\n       <button class='begin-btn'>Begin Game!</button>\r\n\r\n    </section>\r\n  `;\r\n\r\n  createResourcesScreen(playerCiv:Civilization, resources:Resources) {\r\n    let resourcesScreen = `\r\n      <section class='screen resources-screen' id='resources'>\r\n        <h2><img src='img/resources.png'> Resources</h2>\r\n        <section class='resources-screen-inner'>\r\n          <div class='panel food-panel'>\r\n            <button class='food-btn'><img src='img/food-alt.png'> Grow Food</button>\r\n\r\n            <span class='resource-info r-food-pc' title='the amount of food you earn per click'>${resources.get('food').perClick} PC</span>\r\n            <span class='resource-info r-food-ps' title='the amount of food you earn per second'>${resources.get('food').perSecond} PS</span>\r\n            <span class='resource-info r-food-max'>${resources.get('food').max} max</span>\r\n            <span class='resource-info r-food-total'>${resources.get('food').total} total</span>\r\n\r\n          </div>\r\n          <div class='panel prod-panel'>\r\n            <button class='prod-btn'><img src='img/prod.png'> Create Production</button>\r\n\r\n            <span class='resource-info' title='the amount of production you make per click'>${resources.get('prod').perClick} PC</span>\r\n            <span class='resource-info' title='the amount of production you make per second'>${resources.get('prod').perSecond} PS</span>\r\n            <span class='resource-info'>${resources.get('prod').max} max</span>\r\n            <span class='resource-info r-prod-total'>${resources.get('prod').total} total</span>\r\n\r\n          </div>\r\n\r\n          <div class='panel location-panel'>\r\n            <p>Biome (${playerCiv.location}) Bonus: +10% <img src='img/food.png'> PC</p>\r\n            <p>Secondary Biome (${playerCiv.location}) Bonus: '????'</p>\r\n          </div>\r\n\r\n\r\n          <div class='panel resources-panel'>\r\n            <span class='resource'>\r\n              <img src='img/health.png'> Health\r\n            </span>\r\n\r\n            <span class='resource' data-resource='fish'>\r\n              <img src='img/fish.png'> <span>${resources.get('fish').total}</span>\r\n            </span>\r\n\r\n            <span class='resource' data-resource='banana'>\r\n              <img src='img/banana.png'> <span>${resources.get('banana').total}</span>\r\n            </span>\r\n\r\n            <br>\r\n\r\n            <span class='resource'>\r\n              <img src='img/buildings.png'> Building\r\n            </span>\r\n\r\n            <span class='resource' data-resource='stone'>\r\n              <img src='img/stone.png'> <span>${resources.get('stone').total}</span>\r\n            </span>\r\n\r\n            <span class='resource' data-resource='iron'>\r\n              <img src='img/iron.png'> <span>${resources.get('iron').total}</span>\r\n            </span>\r\n\r\n\r\n\r\n            <br>\r\n\r\n            <span class='resource'>\r\n              <img src='img/cavalry.png'> Strategic\r\n            </span>\r\n\r\n            <span class='resource' data-resource='horse'>\r\n              <img src='img/horse.png'> <span>${resources.get('horse').total}</span>\r\n            </span>\r\n\r\n            <span class='resource' data-unlocked='false' data-resource='oil'>\r\n              <img src='img/oil.png'> <span>${resources.get('oil').total}</span>\r\n            </span>\r\n\r\n            <span class='resource' data-resource='uranium'>\r\n              <img src='img/uranium.png'> <span>${resources.get('uranium').total}</span>\r\n            </span>\r\n\r\n            <br>\r\n\r\n            <span class='resource'>\r\n              <img src='img/crown.png'> Luxury\r\n            </span>\r\n\r\n            <span class='resource' data-resource='spices'>\r\n              <img src='img/spices.png'> <span>${resources.get('spices').total}</span>\r\n            </span>\r\n\r\n            <span class='resource' data-resource='gold'>\r\n              <img src='img/gold.png'> <span>${resources.get('gold').total}</span>\r\n            </span>\r\n\r\n            <span class='resource' data-resource='gems'>\r\n              <img src='img/gems.png'> <span>${resources.get('gems').total}</span>\r\n            </span>\r\n\r\n            <br>\r\n\r\n            <span class='resource'>\r\n              <img src='img/illuminati.png'> Power\r\n            </span>\r\n\r\n            <span class='resource' data-resource='spaghetti'>\r\n              <img src='img/spaghetti.png'> <span>${resources.get('spaghetti').total}</span>\r\n            </span>\r\n\r\n            <span class='resource' data-resource='chihuahua'>\r\n              <img src='img/chihuahua.png'> <span>${resources.get('chihuahua').total}</span>\r\n            </span>\r\n\r\n          </div>\r\n\r\n\r\n\r\n        </section>\r\n        <br>\r\n        <section class='resource-screen-inner resource-info-screen'>\r\n          <p>Click on a resource to recieve more information on it!</p>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return resourcesScreen;\r\n  }\r\n\r\n  createScreenHeader(playerCiv:Civilization, game:Game):string {\r\n    let screenHeader = `\r\n      <header class='screen-header'>\r\n        <h1>Clickopolis</h1>\r\n        <h2>${playerCiv.leaderName} of ${playerCiv.civName} &mdash; ${game.era} era &mdash; <span class='game-year-text'>${game.year}</span> AC</h2>\r\n      </header>\r\n    `;\r\n    return screenHeader;\r\n  }\r\n\r\n  createCitizenScreen(playerCiv:Civilization, citizens:Citizens):string {\r\n    let citizensScreen = `\r\n      <section class='screen citizens-screen' id='citizens'>\r\n        <h2><img src='img/citizens.png'> Citizens</h2>\r\n        <section class='citizens-screen-inner'>\r\n          <p class='center-text'>Each citizen produces 1 <img src='img/coin.png'>, 2 <img src='img/research.png'>, 1 <img src='img/angry.png'>, and 1 <img src='img/pollution.png'></p>\r\n          <p class='center-text'>Each citizen also consumes 1 <img src='img/food.png'> PS</p>\r\n          <div class='row citizen-farmer'>\r\n            <button data-citizen='farmer' data-citizen-amount=-1>-1</button>\r\n            <span class='citizen-icon'><img src='img/farmer.png'></span>\r\n            <button data-citizen='farmer' data-citizen-amount=1>+1</button>\r\n            <span class='citizen-info'>\r\n              Farmers: <strong class='farmer-num-text'>${citizens.get('farmer').amount}</strong> | Farmers provide +1 <img src='img/food.png'> PC and +.2 PC.\r\n            </span>\r\n          </div>\r\n          <div class='row citizen-miner'>\r\n            <button data-citizen='miner' data-citizen-amount='-1'>-1</button>\r\n            <span class='citizen-icon'><img src='img/miner.png'></span>\r\n            <button data-citizen='miner' data-citizen-amount='1'>+1</button>\r\n            <span class='citizen-info'>\r\n              Miners: <strong class='miner-num-text'>0</strong> | Miners provide +1 <img src='img/prod.png'> PC and +.2 PC.\r\n            </span>\r\n          </div>\r\n          <div class='row citizen-soldier'>\r\n            <button data-citizen-amount='-1'>-1</button>\r\n            <span class='citizen-icon'><img src='img/soldier-alt.png'></span>\r\n            <button data-citizen-amount='1'>+1</button>\r\n            <span class='citizen-info'>\r\n              Soldiers: <strong class='soldier-num-text'>0</strong> | Soldiers defend and fight for your empire. -3 <img src='img/coin.png'>\r\n            </span>\r\n          </div>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return citizensScreen;\r\n  }\r\n\r\n  createCivilizationScreen(playerCiv:Civilization):string {\r\n    let civilizationScreen = `\r\n      <section class='screen civilization-screen' id='civilization'>\r\n        <h2><img src='img/empire.png'> Civilization</h2>\r\n        <section class='civilization-screen-inner'>\r\n          <div class='panel population-panel'>\r\n            <button class='pop-btn'>+1 Population (<img src='img/food.png'> <span class='pop-growth-cost'>${playerCiv.populationGrowthCost}</span>)</button>\r\n            <span class='civ-metric metric-population' title='${playerCiv.populationReal + ' people'}'>Population: <img src='img/citizen.png'> <span class='population-text'>${playerCiv.population}</span></span>\r\n          </div>\r\n          <div class='panel civ-metric-panel'>\r\n            <span class='civ-metric metric-happiness'>\r\n              <img src='img/happy.png'> ${playerCiv.happiness}\r\n            </span>\r\n            <span class='civ-metric metric-anger'>\r\n              <img src='img/angry.png'> <span class='civ-anger-text'>${playerCiv.anger}</span>\r\n            </span>\r\n            <span class='civ-metric metric-health'>\r\n              <img src='img/health.png'> ${playerCiv.health}\r\n            </span>\r\n            <span class='civ-metric metric-pollution'>\r\n              <img src='img/pollution.png'> <span class='civ-pollution-text'>${playerCiv.pollution}</span>\r\n            </span>\r\n            <span class='civ-metric metric-influence'>\r\n              <img class='influence-img' src='img/influence.png'> ${playerCiv.influence}\r\n            </span>\r\n            <span class='civ-metric metric-golden-age' title='Golden age points trigger Golden Ages. Points are earned by your happiness, minus anger.'>\r\n              <img src='img/golden-age.png'> Golden Age Points <span class='golden-age-progress'>${playerCiv.goldenAgeProgress}</span> / <span class='golden-age-goal'>${u.abbrNum(playerCiv.goldenAgeGoal, 2)}</span>\r\n            </span>\r\n          </div>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return civilizationScreen;\r\n  }\r\n\r\n  createEconomyScreen(playerCiv:Civilization) {\r\n    let economyScreen = `\r\n      <section class='screen economy-screen' id='economy'>\r\n        <h2><img src='img/money.png'> Economy</h2>\r\n        <section class='economy-screen-inner'>\r\n          <div class='total-cash'>\r\n            <img src='img/coin.png'> <span class='cash-text'>${playerCiv.cash}</span>\r\n          </div>\r\n          <span class='cash-breakdown'>\r\n            <span class='cash-item'>From Citizens: <span class='cash-from-citizens'>0</span></span>\r\n            <span class='cash-item'>From Trade Routes: <span class='cash-from-routes'>0</span></span>\r\n            <span class='cash-item'>From Buildings: <span class='cash-from-buildings'>0</span></span>\r\n            <span class='cash-item'>From Military: <span class='cash-from-military'>0</span></span>\r\n            <span class='cash-item cash-item-total'>Per Minute: <span class='cash-PM'>${playerCiv.cashPM}</span></span>\r\n          </span>\r\n          <div class='trade-deal-history'>\r\n            <table>\r\n              <tr>\r\n                <td colspan='4'><img src='img/trade-deal.png'> Trade Deal History</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Nation</td>\r\n                <td>Gave...</td>\r\n                <td>For...</td>\r\n                <td>Year</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Ulonia</td>\r\n                <td>10 <img src='img/horse.png'></td>\r\n                <td>5 <img src='img/gold.png'></td>\r\n                <td>25 AC</td>\r\n              </tr>\r\n            </table>\r\n\r\n\r\n          </div>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return economyScreen;\r\n  }\r\n\r\n  createBuildingsScreen() {\r\n    let buildingsScreen = `\r\n      <section class='screen buildings-screen' id='buildings'>\r\n        <h2><img src='img/buildings.png'> Buildings</h2>\r\n        <section class='buildings-screen-inner'>\r\n          <div class='panel buildings-mode'>\r\n            <button class='purchase-mode-btn'>Purchase Mode</button>\r\n          </div>\r\n        </section>\r\n        <section class='buildings-screen-inner'>\r\n          <div class='building'>\r\n            <span class='building-total' title='how many you own'>0</span>\r\n            <span class='building-cost'><span class='building-cost-text'>15</span> <img src='img/prod.png'></span>\r\n            <span class='building-name'>Hut</span>\r\n            <span class='building-description'>A simple hut. Could use air conditioning.</span>\r\n            <span class='building-effect'>+1 <img src='img/happy.png'></span>\r\n          </div>\r\n          <div class='building'>\r\n            <span class='building-total' title='how many you own'>0</span>\r\n            <span class='building-cost'><span class='building-cost-text'>25</span> <img src='img/prod.png'></span>\r\n            <span class='building-name'>Granary</span>\r\n            <span class='building-description'>A granary for storing food.</span>\r\n            <span class='building-effect'>+200 <img src='img/food.png'> Max</span>\r\n          </div>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return buildingsScreen;\r\n  }\r\n\r\n  createTechnologyScreen(playerCiv:Civilization) {\r\n    let technologyScreen = `\r\n      <section class='screen technology-screen' id='technology'>\r\n        <h2><img src='img/research.png'> Technology</h2>\r\n        <section class='technology-screen-inner'>\r\n          <div class='center-text current-research'>Currently researching towards: <span class='researching-techs'>${playerCiv.researchingTechs}</span></div>\r\n          <div class='center-text research-exceeding'></div>\r\n          <span class='research-text r-text'>${playerCiv.research}</span>\r\n          <div class='research-progress-bar'></div>\r\n          <span class='research-cost-text r-text'>${playerCiv.researchCost}</span>\r\n        </section>\r\n        <section class='technology-screen-inner search'>\r\n          <input type='search' placeholder='filter...'>\r\n          <span class='research-filters'>\r\n            <label><input type='checkbox'>Show Unavailable Techs</label><br>\r\n            <label><input type='checkbox'>Show Purchased Techs</label>\r\n          </span>\r\n        </section>\r\n        <section class='technology-screen-inner technologies'>\r\n          <span style='color:white;' class='center-text'>Press Ctrl + Click to deselect a tech.</span>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return technologyScreen;\r\n  }\r\n\r\n\r\n  createDiplomacyScreen(playerCiv:Civilization) {\r\n    let diplomacyScreen = `\r\n    <section class='screen diplomacy-screen' id='diplomacy'>\r\n      <h2>\r\n        <img src='img/deal.png'> Diplomacy\r\n      </h2>\r\n      <section class='diplomacy-screen-inner'>\r\n        <div class='diplomacy-summary'>\r\n          Nations Met: <span class='nations-met-text'>25</span> &lozf;\r\n          Nations Destroyed: <span class='nations-destroyed-text'>0</span> &lozf;\r\n          Nations Absorbed: <span class='nations-absorbed-text'>0</span>\r\n        </div>\r\n      </section>\r\n      <section class='diplomacy-screen-inner'>\r\n        <div class='nation'>\r\n          <div class='nation-header'>\r\n            <div class='nation-name'>Entropia</div>\r\n            <img class='nation-img' src='img/empire-4.png'>\r\n            <button class='nation-interact-btn'>Interact</button>\r\n          </div>\r\n          <div class='nation-profile'>\r\n            <p class='nation-description'>\r\n              A technologically advanced nation ocuppied by religious exiles.\r\n            </p>\r\n            <div class='nation-metrics'>\r\n              <img src='img/influence.png'> <span class='nation-influence-text'>12</span>\r\n              <img src='img/strength.png'> <span class='nation-strength-text'>33</span>\r\n              <img src='img/defense.png'> <span class='nation-defense-text'>23</span>\r\n              <img src='img/coin.png'> <span class='nation-cash-text'>1.5K</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class='nation'>\r\n          <div class='nation-header' style='background: #6CDBE0;'>\r\n            <div class='nation-name'>Arcopolis</div>\r\n            <img class='nation-img' src='img/empire-8.png'>\r\n            <button class='nation-interact-btn'>Interact</button>\r\n          </div>\r\n          <div class='nation-profile'>\r\n            <p class='nation-description'>\r\n              A seafaring nation prone to violence.\r\n            </p>\r\n            <div class='nation-metrics'>\r\n              <img src='img/influence-alt.png'> <span class='nation-influence-text'>-4</span>\r\n              <img src='img/strength.png'> <span class='nation-strength-text'>55</span>\r\n              <img src='img/defense.png'> <span class='nation-defense-text'>68</span>\r\n              <img src='img/coin.png'> <span class='nation-cash-text'>3.7K</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </section>\r\n    `;\r\n    return diplomacyScreen;\r\n  }\r\n\r\n  createMilitaryScreen(playerCiv:Civilization) {\r\n    let militaryScreen = `\r\n      <section class='screen military-screen' id='military'>\r\n        <h2>\r\n          <img src='img/military.png'> Military\r\n        </h2>\r\n        <section class='military-screen-inner'>\r\n          <span class='military-strength military-metric'><img src='img/strength.png'> Strength: <span class='military-strenght-text'>${playerCiv.strength}</span></span>\r\n          <span class='military-defense military-metric'><img src='img/defense.png'> Defense: <span class='military-defense-text'>${playerCiv.defense}</span></span>\r\n          <span class='military-soldiers military-metric'><img src='img/soldier.png'> Soldiers: <span class='military-soldiers-text'>0</span></span>\r\n        </section>\r\n        <section class='military-screen-inner'>\r\n          <h3>Soldier Assignments</h3>\r\n        </section>\r\n        <section class='military-screen-inner'>\r\n          <h3>Military Bases</h3>\r\n        </section>\r\n        <section class='military-screen-inner'>\r\n          <h3>Military Operations</h3>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return militaryScreen;\r\n  }\r\n\r\n\r\n\r\n  createSettingsScreen(playerCiv:Civilization, game:Game) {\r\n    let settingsScreen = `\r\n      <section class='screen settings-screen' id='settings'>\r\n        <h2>\r\n          <img src='img/gear.png'> Settings\r\n        </h2>\r\n        <section class='settings-screen-inner'>\r\n          <p><span class='settings-label'>Game Skin:</span>\r\n            <select>\r\n              <option>Ancient</option>\r\n            </select>\r\n          </p>\r\n          <p><span class='settings-label'>UI:</span>\r\n            <div class='ui-button horizontal-button'><img src='img/horizontal.png' title='horizontal'></div>\r\n            <div class='ui-button grid-button'><img src='img/grid.png' title='grid'></div>\r\n          </p>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return settingsScreen;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport = Templates;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/template.ts\n **/","function notify(message:string):void {\r\n  // TODO: create settimeout\r\n  let note = document.createElement('div');\r\n  note.className = 'notification';\r\n\r\n  note.textContent = message;\r\n  document.body.appendChild(note);\r\n  setTimeout(function () {\r\n    note.className = 'notification hidden';\r\n  }, 2500);\r\n}\r\n\r\nexport = notify;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/notify.ts\n **/"],"sourceRoot":""}