{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap a3d93069a5c322331bab","webpack:///./game/index.ts","webpack:///./~/underscore/underscore.js","webpack:///./game/game.ts","webpack:///./game/civilization.ts","webpack:///./game/template.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","savePlayer","store","set","playerCiv","console","log","get","append","node","html","el","document","querySelector","insertAdjacentHTML","bindElement","eventType","callback","addEventListener","event","startGame","undefined","loadCiv","Civilization","civName","leaderName","location","startSavedGame","startNewGame","debug","templates","createStartScreen","createGameUI","settingsScreen","setPlayerCiv","traitsSelection","index","traitSelect","trait","value","leaderTraits","intro","clickopolisGame","createElement","setAttribute","innerHTML","createScreenHeader","resourcesScreen","createCitizenScreen","remove","body","appendChild","civNameInput","leaderNameInput","init","_","Game","Templates","random","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","createReduce","dir","iterator","obj","iteratee","memo","keys","length","currentKey","context","optimizeCb","isArrayLike","arguments","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","i","Math","max","min","slice","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","prototype","ObjProto","prop","has","contains","push","root","this","previousUnderscore","ArrayProto","Array","Object","FuncProto","Function","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","VERSION","func","argCount","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","l","key","baseCreate","result","MAX_ARRAY_INDEX","pow","each","forEach","map","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","list","reject","negate","every","all","some","any","includes","include","fromIndex","guard","values","indexOf","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","shuffled","sample","n","sortBy","criteria","sort","left","right","a","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","concat","partial","boundArgs","position","bindAll","Error","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","options","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","compose","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","type","name","Int8Array","isFinite","parseFloat","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","join","testRegexp","RegExp","replaceRegexp","string","test","replace","escape","unescape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","e","data","argument","chain","instance","_chain","mixin","valueOf","toJSON","introStep","leaderTraitsMax","startScreen","citizensScreen","screenHeader"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// <reference path=\"store.d.ts\" />\r\n\t// <reference path=\"underscore.d.ts\" />\r\n\t\"use strict\";\r\n\tvar _ = __webpack_require__(1);\r\n\tvar Game = __webpack_require__(2);\r\n\tvar Civilization = __webpack_require__(3);\r\n\tvar Templates = __webpack_require__(4);\r\n\tconsole.log(_.random(0, 100));\r\n\tvar game = new Game(0);\r\n\tvar playerCiv;\r\n\tvar templates = new Templates();\r\n\tfunction savePlayer() {\r\n\t    store.set('playerCiv', playerCiv);\r\n\t    console.log(store.get('playerCiv'));\r\n\t}\r\n\tfunction removeItem(arr, item) {\r\n\t    for (var i = arr.length - 1; i--;) {\r\n\t        if (arr[i] === item)\r\n\t            arr.splice(i, 1);\r\n\t    }\r\n\t}\r\n\tfunction prepend(node, html) {\r\n\t    var el = document.querySelector(node);\r\n\t    el.insertAdjacentHTML('beforeend', html);\r\n\t}\r\n\tfunction append(node, html) {\r\n\t    var el = document.querySelector(node);\r\n\t    el.insertAdjacentHTML('afterend', html);\r\n\t}\r\n\tfunction bindElement(node, eventType, callback) {\r\n\t    var el = document.querySelector(node);\r\n\t    el.addEventListener(eventType, function (event) {\r\n\t        console.log(callback);\r\n\t        return callback();\r\n\t    });\r\n\t}\r\n\tfunction unbindElement(node, eventType) {\r\n\t}\r\n\tfunction hideElement(element) {\r\n\t    element = element;\r\n\t    element.className += \" hidden\";\r\n\t}\r\n\tfunction removeElement(element) {\r\n\t    element = element;\r\n\t    element.remove();\r\n\t}\r\n\tfunction startGame() {\r\n\t    if (store.get('playerCiv') !== undefined) {\r\n\t        var loadCiv = store.get('playerCiv');\r\n\t        playerCiv = new Civilization(loadCiv.civName, loadCiv.leaderName, loadCiv.location);\r\n\t        startSavedGame();\r\n\t    }\r\n\t    else {\r\n\t        startNewGame();\r\n\t        playerCiv = new Civilization('', '', '');\r\n\t    }\r\n\t}\r\n\tfunction startSavedGame() {\r\n\t    console.debug(\"Loading Saved Game...\");\r\n\t    append('body', templates.createStartScreen(playerCiv));\r\n\t    //store.clear();\r\n\t    bindElement('.load-btn', 'click', function () {\r\n\t        createGameUI();\r\n\t    });\r\n\t    bindElement('.current-btn', 'click', function () {\r\n\t        createGameUI();\r\n\t    });\r\n\t}\r\n\t;\r\n\tfunction startNewGame() {\r\n\t    console.debug(\"Starting New Game...\");\r\n\t    append('body', templates.settingsScreen);\r\n\t    // bindElement('.new-btn', 'click', function () {\r\n\t    //   console.log('Hey...is this thing working??');\r\n\t    // });\r\n\t    bindElement('.begin-btn', 'click', function () {\r\n\t        //console.log('hi');\r\n\t        setPlayerCiv();\r\n\t        createGameUI();\r\n\t    });\r\n\t    document.querySelector('#trait').addEventListener('change', function () {\r\n\t        traitsSelection(0);\r\n\t    });\r\n\t}\r\n\t;\r\n\tfunction traitsSelection(index) {\r\n\t    var traitSelect = document.querySelector('#trait');\r\n\t    var trait = traitSelect.value;\r\n\t    playerCiv.leaderTraits[index] = trait;\r\n\t    console.log(traitSelect.value, playerCiv.leaderTraits);\r\n\t    savePlayer();\r\n\t}\r\n\tfunction createGameUI() {\r\n\t    var intro = document.querySelector('.clickopolis-intro');\r\n\t    var clickopolisGame = document.createElement('section');\r\n\t    clickopolisGame.setAttribute('class', 'clickopolis');\r\n\t    clickopolisGame.setAttribute('id', 'clickopolis');\r\n\t    clickopolisGame.innerHTML = templates.createScreenHeader(playerCiv) + templates.resourcesScreen + templates.createCitizenScreen(playerCiv);\r\n\t    intro.remove();\r\n\t    document.body.appendChild(clickopolisGame);\r\n\t    //append('body', templates.resourcesScreen);\r\n\t}\r\n\tfunction setPlayerCiv() {\r\n\t    var civNameInput = document.querySelector('#civName'), leaderNameInput = document.querySelector('#leaderName'), location = document.querySelector('#location');\r\n\t    playerCiv.civName = civNameInput.value;\r\n\t    playerCiv.leaderName = leaderNameInput.value;\r\n\t    playerCiv.location = location.value;\r\n\t    savePlayer();\r\n\t}\r\n\t// function startScreen():void {\r\n\t//   let htmlString:string = `\r\n\t//     <section class=\"clickopolis-start\">\r\n\t// <h1>Clickopolis</h1>\r\n\t// <div class=\"start-options\">\r\n\t//   <button class=\"large-btn start-btn load-btn\">Load Game...</button>\r\n\t//   <button class=\"large-btn start-btn new-btn\">New Game</button>\r\n\t//   <button class=\"large-btn start-btn current-btn\">\r\n\t//     <p class=\"current-game-heading\">Current Game - ${playerCiv.leaderName} of ${playerCiv.civName} </p>\r\n\t//     <p>\r\n\t//       <span>\r\n\t//         <img src=\"img/achievements.png\"> 5\r\n\t//       </span>\r\n\t//       <span>\r\n\t//         <img src=\"img/strength.png\"> 33\r\n\t//       </span>\r\n\t//       <span>\r\n\t//         <img src=\"img/defense.png\"> 44\r\n\t//       </span>\r\n\t//       <span>\r\n\t//         <img src=\"img/legacy.png\"> 2\r\n\t//       </span>\r\n\t//       <span>\r\n\t//         <img src=\"img/coin.png\"> 1K\r\n\t//       </span>\r\n\t//       <span>\r\n\t//         <img src=\"img/wonder.png\"> 1\r\n\t//       </span>\r\n\t//     </p>\r\n\t//   </button>\r\n\t// </div>\r\n\t//     </section>\r\n\t//   `;\r\n\t//   document.body.insertAdjacentHTML('beforeend', htmlString);\r\n\t//   bindLoadGameButton();\r\n\t//   bindNewGameButton();\r\n\t//   bindCurrentGameButton();\r\n\t// }\r\n\t// function bindLoadGameButton() {};\r\n\t// function bindNewGameButton():void {\r\n\t//   document.querySelector('.new-btn').addEventListener('click', function(event) {\r\n\t//     newGameStart();\r\n\t//   });\r\n\t// };\r\n\tfunction bindCurrentGameButton() { }\r\n\t;\r\n\t// function newGameStart():void {\r\n\t//   let htmlString = `\r\n\t//     <section class=\"clickopolis-intro\">\r\n\t//       <span class=\"step-one\">\r\n\t//         <h1>Welcome to the World of Clickopolis!</h1>\r\n\t//         <p>Starting from the flames of the ancient world, you will progress steadily towards modernity&hellip;and beyond. You, the leader of a small faction of hunter-gatherers, have decided to settle\r\n\t//           <select id=\"location\">\r\n\t//             <option value=\"none\">select an option!</option>\r\n\t//             <option value=\"coast\">by the Coast</option>\r\n\t//             <option value=\"oasis\">in an Oasis</option>\r\n\t//             <option value=\"forest\">in a Forest</option>\r\n\t//             <option value=\"tundra\">in a Tundra</option>\r\n\t//             <option value=\"iceberg\">on an Iceberg</option>\r\n\t//           </select>\r\n\t//         </p>\r\n\t//         <p>Your name? <input type=\"text\" id=\"leaderName\" placeholder=\"Jake\"><br><br> And the name of your empire? <input type=\"text\" id=\"civName\" placeholder=\"Jaketopia\"></p>\r\n\t//       </span>\r\n\t//\r\n\t//       <button class=\"step-btn next-btn\">Next &rarr;</button>\r\n\t//     </section>\r\n\t//   `;\r\n\t//   document.querySelector('.clickopolis-start').remove();\r\n\t//   prepend('body', htmlString);\r\n\t//   bindNextButton();\r\n\t//   //bindPrevButton();\r\n\t// }\r\n\tfunction bindNextButton() {\r\n\t    document.querySelector('.next-btn').addEventListener('click', function () {\r\n\t        switch (game.introStep) {\r\n\t            case 0:\r\n\t                var lni = document.getElementById('leaderName');\r\n\t                var cni = document.getElementById('civName');\r\n\t                var loc = document.getElementById('location');\r\n\t                createCiv(game.introStep, lni, cni, loc);\r\n\t                //game.introStep++;\r\n\t                break;\r\n\t            case 1:\r\n\t                console.log('1 step ay');\r\n\t                configureSettings();\r\n\t                game.introStep++;\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t    });\r\n\t}\r\n\tfunction validateStepOne() {\r\n\t}\r\n\tfunction createCiv(step, leaderNameInput, civNameInput, locationInput) {\r\n\t    var leaderName = leaderNameInput.value;\r\n\t    var civName = civNameInput.value;\r\n\t    var location = locationInput.value;\r\n\t    var prevBtn = document.querySelector('.prev-btn');\r\n\t    var nextBtn = document.querySelector('.next-btn');\r\n\t    playerCiv.leaderName = leaderName;\r\n\t    playerCiv.civName = civName;\r\n\t    playerCiv.location = location;\r\n\t    savePlayer();\r\n\t    if (step === 0) {\r\n\t        if (leaderName === \"\" || civName === \"\" || location === \"none\") {\r\n\t            console.error('Not all fields filled out.');\r\n\t        }\r\n\t        else {\r\n\t            createCivStepOne(leaderName, civName, location);\r\n\t            prevBtn.disabled = false;\r\n\t            game.introStep = 1;\r\n\t        }\r\n\t    }\r\n\t    if (step === 1) {\r\n\t    }\r\n\t}\r\n\tfunction createCivStepOne(leaderName, civName, location) {\r\n\t    //let playerCiv:Civilization = new Civilization(civName, leaderName, location);\r\n\t    var stepOne = document.querySelector('.step-one');\r\n\t    var stepTwo = \"\\n    <span class='step-two'>\\n      <h2>Welcome \" + playerCiv.leaderName + \", leader of \" + playerCiv.civName + \", brave inhabitant of the \" + playerCiv.location + \"!</h2>\\n      <p>What are your traits, O Glorious Leader? (Select <em id='traitsLeft'>3</em>)</p>\\n      <div class='checkbox-list trait-cbl'>\\n        <label><input type='checkbox' value='aggressive'>Aggressive</label>\\n        <label><input type='checkbox' value='communal'>Communal</label>\\n        <label><input type='checkbox' value='cunning'>Cunning</label>\\n        <label><input type='checkbox' value='deliberate'>Deliberate</label>\\n        <label><input type='checkbox' value='expansionist'>Expansionist</label>\\n        <label><input type='checkbox' value='individualistic'>Individualistic</label>\\n        <label><input type='checkbox' value='industrious'>Industrious</label>\\n        <label><input type='checkbox' value='isolationist'>Isolationist</label>\\n        <label><input type='checkbox' value='pacifistic'>Pacificistic</label>\\n        <label><input type='checkbox' value='persuasive'>Persuasive</label>\\n      </div>\\n    </span>\";\r\n\t    stepOne.insertAdjacentHTML('afterend', stepTwo);\r\n\t    stepOne.className += \" hidden\";\r\n\t    activateTraitList(playerCiv);\r\n\t}\r\n\tfunction activateTraitList(playerCiv) {\r\n\t    var traitCheckBoxes = document.querySelectorAll('.trait-cbl input');\r\n\t    var traitsLeft = document.getElementById('traitsLeft');\r\n\t    for (var i = 0; i < traitCheckBoxes.length; i++) {\r\n\t        traitCheckBoxes[i].addEventListener('change', function (event) {\r\n\t            if (this.checked === true) {\r\n\t                if (playerCiv.leaderTraits.length >= 3) {\r\n\t                    console.error(\"Exceedeed max traits.\");\r\n\t                    event.preventDefault();\r\n\t                }\r\n\t                else {\r\n\t                    playerCiv.leaderTraits.push(this.value);\r\n\t                    console.log(playerCiv.leaderTraits);\r\n\t                    traitsLeft.textContent = (3 - playerCiv.leaderTraits.length).toString();\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                removeItem(playerCiv.leaderTraits, this.value);\r\n\t                console.log(playerCiv.leaderTraits);\r\n\t                traitsLeft.textContent = (playerCiv.leaderTraits.length).toString();\r\n\t            }\r\n\t        });\r\n\t    }\r\n\t}\r\n\tfunction configureSettings() {\r\n\t    var stepTwo = document.querySelector('.step-two');\r\n\t    hideElement(stepTwo);\r\n\t    var stepThree = \"\\n    <section class='step-three'>\\n      <h2>Configure & Confirm Your Settings</h2>\\n      <label>Name</label><input value=\\\"\" + playerCiv.leaderName + \"\\\"><br>\\n      <label>Civilization</label><input value=\\\"\" + playerCiv.civName + \"\\\"><br>\\n      <label>Settlement<label><input value=\\\"\" + playerCiv.location + \"\\\"><br>\\n\\n    </section>\\n  \";\r\n\t    prepend('.stepThree', stepThree);\r\n\t}\r\n\tfunction init() {\r\n\t    startGame();\r\n\t}\r\n\tinit();\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n\t//     http://underscorejs.org\n\t//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t//     Underscore may be freely distributed under the MIT license.\n\t\n\t(function() {\n\t\n\t  // Baseline setup\n\t  // --------------\n\t\n\t  // Establish the root object, `window` in the browser, or `exports` on the server.\n\t  var root = this;\n\t\n\t  // Save the previous value of the `_` variable.\n\t  var previousUnderscore = root._;\n\t\n\t  // Save bytes in the minified (but not gzipped) version:\n\t  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\t\n\t  // Create quick reference variables for speed access to core prototypes.\n\t  var\n\t    push             = ArrayProto.push,\n\t    slice            = ArrayProto.slice,\n\t    toString         = ObjProto.toString,\n\t    hasOwnProperty   = ObjProto.hasOwnProperty;\n\t\n\t  // All **ECMAScript 5** native function implementations that we hope to use\n\t  // are declared here.\n\t  var\n\t    nativeIsArray      = Array.isArray,\n\t    nativeKeys         = Object.keys,\n\t    nativeBind         = FuncProto.bind,\n\t    nativeCreate       = Object.create;\n\t\n\t  // Naked function reference for surrogate-prototype-swapping.\n\t  var Ctor = function(){};\n\t\n\t  // Create a safe reference to the Underscore object for use below.\n\t  var _ = function(obj) {\n\t    if (obj instanceof _) return obj;\n\t    if (!(this instanceof _)) return new _(obj);\n\t    this._wrapped = obj;\n\t  };\n\t\n\t  // Export the Underscore object for **Node.js**, with\n\t  // backwards-compatibility for the old `require()` API. If we're in\n\t  // the browser, add `_` as a global object.\n\t  if (true) {\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t      exports = module.exports = _;\n\t    }\n\t    exports._ = _;\n\t  } else {\n\t    root._ = _;\n\t  }\n\t\n\t  // Current version.\n\t  _.VERSION = '1.8.3';\n\t\n\t  // Internal function that returns an efficient (for current engines) version\n\t  // of the passed-in callback, to be repeatedly applied in other Underscore\n\t  // functions.\n\t  var optimizeCb = function(func, context, argCount) {\n\t    if (context === void 0) return func;\n\t    switch (argCount == null ? 3 : argCount) {\n\t      case 1: return function(value) {\n\t        return func.call(context, value);\n\t      };\n\t      case 2: return function(value, other) {\n\t        return func.call(context, value, other);\n\t      };\n\t      case 3: return function(value, index, collection) {\n\t        return func.call(context, value, index, collection);\n\t      };\n\t      case 4: return function(accumulator, value, index, collection) {\n\t        return func.call(context, accumulator, value, index, collection);\n\t      };\n\t    }\n\t    return function() {\n\t      return func.apply(context, arguments);\n\t    };\n\t  };\n\t\n\t  // A mostly-internal function to generate callbacks that can be applied\n\t  // to each element in a collection, returning the desired result — either\n\t  // identity, an arbitrary callback, a property matcher, or a property accessor.\n\t  var cb = function(value, context, argCount) {\n\t    if (value == null) return _.identity;\n\t    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n\t    if (_.isObject(value)) return _.matcher(value);\n\t    return _.property(value);\n\t  };\n\t  _.iteratee = function(value, context) {\n\t    return cb(value, context, Infinity);\n\t  };\n\t\n\t  // An internal function for creating assigner functions.\n\t  var createAssigner = function(keysFunc, undefinedOnly) {\n\t    return function(obj) {\n\t      var length = arguments.length;\n\t      if (length < 2 || obj == null) return obj;\n\t      for (var index = 1; index < length; index++) {\n\t        var source = arguments[index],\n\t            keys = keysFunc(source),\n\t            l = keys.length;\n\t        for (var i = 0; i < l; i++) {\n\t          var key = keys[i];\n\t          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n\t        }\n\t      }\n\t      return obj;\n\t    };\n\t  };\n\t\n\t  // An internal function for creating a new object that inherits from another.\n\t  var baseCreate = function(prototype) {\n\t    if (!_.isObject(prototype)) return {};\n\t    if (nativeCreate) return nativeCreate(prototype);\n\t    Ctor.prototype = prototype;\n\t    var result = new Ctor;\n\t    Ctor.prototype = null;\n\t    return result;\n\t  };\n\t\n\t  var property = function(key) {\n\t    return function(obj) {\n\t      return obj == null ? void 0 : obj[key];\n\t    };\n\t  };\n\t\n\t  // Helper for collection methods to determine whether a collection\n\t  // should be iterated as an array or as an object\n\t  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\t  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\t  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\t  var getLength = property('length');\n\t  var isArrayLike = function(collection) {\n\t    var length = getLength(collection);\n\t    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n\t  };\n\t\n\t  // Collection Functions\n\t  // --------------------\n\t\n\t  // The cornerstone, an `each` implementation, aka `forEach`.\n\t  // Handles raw objects in addition to array-likes. Treats all\n\t  // sparse array-likes as if they were dense.\n\t  _.each = _.forEach = function(obj, iteratee, context) {\n\t    iteratee = optimizeCb(iteratee, context);\n\t    var i, length;\n\t    if (isArrayLike(obj)) {\n\t      for (i = 0, length = obj.length; i < length; i++) {\n\t        iteratee(obj[i], i, obj);\n\t      }\n\t    } else {\n\t      var keys = _.keys(obj);\n\t      for (i = 0, length = keys.length; i < length; i++) {\n\t        iteratee(obj[keys[i]], keys[i], obj);\n\t      }\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Return the results of applying the iteratee to each element.\n\t  _.map = _.collect = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length,\n\t        results = Array(length);\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      results[index] = iteratee(obj[currentKey], currentKey, obj);\n\t    }\n\t    return results;\n\t  };\n\t\n\t  // Create a reducing function iterating left or right.\n\t  function createReduce(dir) {\n\t    // Optimized iterator function as using arguments.length\n\t    // in the main function will deoptimize the, see #1991.\n\t    function iterator(obj, iteratee, memo, keys, index, length) {\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        var currentKey = keys ? keys[index] : index;\n\t        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n\t      }\n\t      return memo;\n\t    }\n\t\n\t    return function(obj, iteratee, memo, context) {\n\t      iteratee = optimizeCb(iteratee, context, 4);\n\t      var keys = !isArrayLike(obj) && _.keys(obj),\n\t          length = (keys || obj).length,\n\t          index = dir > 0 ? 0 : length - 1;\n\t      // Determine the initial value if none is provided.\n\t      if (arguments.length < 3) {\n\t        memo = obj[keys ? keys[index] : index];\n\t        index += dir;\n\t      }\n\t      return iterator(obj, iteratee, memo, keys, index, length);\n\t    };\n\t  }\n\t\n\t  // **Reduce** builds up a single result from a list of values, aka `inject`,\n\t  // or `foldl`.\n\t  _.reduce = _.foldl = _.inject = createReduce(1);\n\t\n\t  // The right-associative version of reduce, also known as `foldr`.\n\t  _.reduceRight = _.foldr = createReduce(-1);\n\t\n\t  // Return the first value which passes a truth test. Aliased as `detect`.\n\t  _.find = _.detect = function(obj, predicate, context) {\n\t    var key;\n\t    if (isArrayLike(obj)) {\n\t      key = _.findIndex(obj, predicate, context);\n\t    } else {\n\t      key = _.findKey(obj, predicate, context);\n\t    }\n\t    if (key !== void 0 && key !== -1) return obj[key];\n\t  };\n\t\n\t  // Return all the elements that pass a truth test.\n\t  // Aliased as `select`.\n\t  _.filter = _.select = function(obj, predicate, context) {\n\t    var results = [];\n\t    predicate = cb(predicate, context);\n\t    _.each(obj, function(value, index, list) {\n\t      if (predicate(value, index, list)) results.push(value);\n\t    });\n\t    return results;\n\t  };\n\t\n\t  // Return all the elements for which a truth test fails.\n\t  _.reject = function(obj, predicate, context) {\n\t    return _.filter(obj, _.negate(cb(predicate)), context);\n\t  };\n\t\n\t  // Determine whether all of the elements match a truth test.\n\t  // Aliased as `all`.\n\t  _.every = _.all = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t  // Determine if at least one element in the object matches a truth test.\n\t  // Aliased as `any`.\n\t  _.some = _.any = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (predicate(obj[currentKey], currentKey, obj)) return true;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  // Determine if the array or object contains a given item (using `===`).\n\t  // Aliased as `includes` and `include`.\n\t  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n\t    if (!isArrayLike(obj)) obj = _.values(obj);\n\t    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n\t    return _.indexOf(obj, item, fromIndex) >= 0;\n\t  };\n\t\n\t  // Invoke a method (with arguments) on every item in a collection.\n\t  _.invoke = function(obj, method) {\n\t    var args = slice.call(arguments, 2);\n\t    var isFunc = _.isFunction(method);\n\t    return _.map(obj, function(value) {\n\t      var func = isFunc ? method : value[method];\n\t      return func == null ? func : func.apply(value, args);\n\t    });\n\t  };\n\t\n\t  // Convenience version of a common use case of `map`: fetching a property.\n\t  _.pluck = function(obj, key) {\n\t    return _.map(obj, _.property(key));\n\t  };\n\t\n\t  // Convenience version of a common use case of `filter`: selecting only objects\n\t  // containing specific `key:value` pairs.\n\t  _.where = function(obj, attrs) {\n\t    return _.filter(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Convenience version of a common use case of `find`: getting the first object\n\t  // containing specific `key:value` pairs.\n\t  _.findWhere = function(obj, attrs) {\n\t    return _.find(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Return the maximum element (or element-based computation).\n\t  _.max = function(obj, iteratee, context) {\n\t    var result = -Infinity, lastComputed = -Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value > result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return the minimum element (or element-based computation).\n\t  _.min = function(obj, iteratee, context) {\n\t    var result = Infinity, lastComputed = Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value < result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Shuffle a collection, using the modern version of the\n\t  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n\t  _.shuffle = function(obj) {\n\t    var set = isArrayLike(obj) ? obj : _.values(obj);\n\t    var length = set.length;\n\t    var shuffled = Array(length);\n\t    for (var index = 0, rand; index < length; index++) {\n\t      rand = _.random(0, index);\n\t      if (rand !== index) shuffled[index] = shuffled[rand];\n\t      shuffled[rand] = set[index];\n\t    }\n\t    return shuffled;\n\t  };\n\t\n\t  // Sample **n** random values from a collection.\n\t  // If **n** is not specified, returns a single random element.\n\t  // The internal `guard` argument allows it to work with `map`.\n\t  _.sample = function(obj, n, guard) {\n\t    if (n == null || guard) {\n\t      if (!isArrayLike(obj)) obj = _.values(obj);\n\t      return obj[_.random(obj.length - 1)];\n\t    }\n\t    return _.shuffle(obj).slice(0, Math.max(0, n));\n\t  };\n\t\n\t  // Sort the object's values by a criterion produced by an iteratee.\n\t  _.sortBy = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    return _.pluck(_.map(obj, function(value, index, list) {\n\t      return {\n\t        value: value,\n\t        index: index,\n\t        criteria: iteratee(value, index, list)\n\t      };\n\t    }).sort(function(left, right) {\n\t      var a = left.criteria;\n\t      var b = right.criteria;\n\t      if (a !== b) {\n\t        if (a > b || a === void 0) return 1;\n\t        if (a < b || b === void 0) return -1;\n\t      }\n\t      return left.index - right.index;\n\t    }), 'value');\n\t  };\n\t\n\t  // An internal function used for aggregate \"group by\" operations.\n\t  var group = function(behavior) {\n\t    return function(obj, iteratee, context) {\n\t      var result = {};\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index) {\n\t        var key = iteratee(value, index, obj);\n\t        behavior(result, value, key);\n\t      });\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Groups the object's values by a criterion. Pass either a string attribute\n\t  // to group by, or a function that returns the criterion.\n\t  _.groupBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n\t  });\n\t\n\t  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n\t  // when you know that your index values will be unique.\n\t  _.indexBy = group(function(result, value, key) {\n\t    result[key] = value;\n\t  });\n\t\n\t  // Counts instances of an object that group by a certain criterion. Pass\n\t  // either a string attribute to count by, or a function that returns the\n\t  // criterion.\n\t  _.countBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key]++; else result[key] = 1;\n\t  });\n\t\n\t  // Safely create a real, live array from anything iterable.\n\t  _.toArray = function(obj) {\n\t    if (!obj) return [];\n\t    if (_.isArray(obj)) return slice.call(obj);\n\t    if (isArrayLike(obj)) return _.map(obj, _.identity);\n\t    return _.values(obj);\n\t  };\n\t\n\t  // Return the number of elements in an object.\n\t  _.size = function(obj) {\n\t    if (obj == null) return 0;\n\t    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n\t  };\n\t\n\t  // Split a collection into two arrays: one whose elements all satisfy the given\n\t  // predicate, and one whose elements all do not satisfy the predicate.\n\t  _.partition = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var pass = [], fail = [];\n\t    _.each(obj, function(value, key, obj) {\n\t      (predicate(value, key, obj) ? pass : fail).push(value);\n\t    });\n\t    return [pass, fail];\n\t  };\n\t\n\t  // Array Functions\n\t  // ---------------\n\t\n\t  // Get the first element of an array. Passing **n** will return the first N\n\t  // values in the array. Aliased as `head` and `take`. The **guard** check\n\t  // allows it to work with `_.map`.\n\t  _.first = _.head = _.take = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[0];\n\t    return _.initial(array, array.length - n);\n\t  };\n\t\n\t  // Returns everything but the last entry of the array. Especially useful on\n\t  // the arguments object. Passing **n** will return all the values in\n\t  // the array, excluding the last N.\n\t  _.initial = function(array, n, guard) {\n\t    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n\t  };\n\t\n\t  // Get the last element of an array. Passing **n** will return the last N\n\t  // values in the array.\n\t  _.last = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[array.length - 1];\n\t    return _.rest(array, Math.max(0, array.length - n));\n\t  };\n\t\n\t  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n\t  // Especially useful on the arguments object. Passing an **n** will return\n\t  // the rest N values in the array.\n\t  _.rest = _.tail = _.drop = function(array, n, guard) {\n\t    return slice.call(array, n == null || guard ? 1 : n);\n\t  };\n\t\n\t  // Trim out all falsy values from an array.\n\t  _.compact = function(array) {\n\t    return _.filter(array, _.identity);\n\t  };\n\t\n\t  // Internal implementation of a recursive `flatten` function.\n\t  var flatten = function(input, shallow, strict, startIndex) {\n\t    var output = [], idx = 0;\n\t    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n\t      var value = input[i];\n\t      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n\t        //flatten current level of array or arguments object\n\t        if (!shallow) value = flatten(value, shallow, strict);\n\t        var j = 0, len = value.length;\n\t        output.length += len;\n\t        while (j < len) {\n\t          output[idx++] = value[j++];\n\t        }\n\t      } else if (!strict) {\n\t        output[idx++] = value;\n\t      }\n\t    }\n\t    return output;\n\t  };\n\t\n\t  // Flatten out an array, either recursively (by default), or just one level.\n\t  _.flatten = function(array, shallow) {\n\t    return flatten(array, shallow, false);\n\t  };\n\t\n\t  // Return a version of the array that does not contain the specified value(s).\n\t  _.without = function(array) {\n\t    return _.difference(array, slice.call(arguments, 1));\n\t  };\n\t\n\t  // Produce a duplicate-free version of the array. If the array has already\n\t  // been sorted, you have the option of using a faster algorithm.\n\t  // Aliased as `unique`.\n\t  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n\t    if (!_.isBoolean(isSorted)) {\n\t      context = iteratee;\n\t      iteratee = isSorted;\n\t      isSorted = false;\n\t    }\n\t    if (iteratee != null) iteratee = cb(iteratee, context);\n\t    var result = [];\n\t    var seen = [];\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var value = array[i],\n\t          computed = iteratee ? iteratee(value, i, array) : value;\n\t      if (isSorted) {\n\t        if (!i || seen !== computed) result.push(value);\n\t        seen = computed;\n\t      } else if (iteratee) {\n\t        if (!_.contains(seen, computed)) {\n\t          seen.push(computed);\n\t          result.push(value);\n\t        }\n\t      } else if (!_.contains(result, value)) {\n\t        result.push(value);\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Produce an array that contains the union: each distinct element from all of\n\t  // the passed-in arrays.\n\t  _.union = function() {\n\t    return _.uniq(flatten(arguments, true, true));\n\t  };\n\t\n\t  // Produce an array that contains every item shared between all the\n\t  // passed-in arrays.\n\t  _.intersection = function(array) {\n\t    var result = [];\n\t    var argsLength = arguments.length;\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var item = array[i];\n\t      if (_.contains(result, item)) continue;\n\t      for (var j = 1; j < argsLength; j++) {\n\t        if (!_.contains(arguments[j], item)) break;\n\t      }\n\t      if (j === argsLength) result.push(item);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Take the difference between one array and a number of other arrays.\n\t  // Only the elements present in just the first array will remain.\n\t  _.difference = function(array) {\n\t    var rest = flatten(arguments, true, true, 1);\n\t    return _.filter(array, function(value){\n\t      return !_.contains(rest, value);\n\t    });\n\t  };\n\t\n\t  // Zip together multiple lists into a single array -- elements that share\n\t  // an index go together.\n\t  _.zip = function() {\n\t    return _.unzip(arguments);\n\t  };\n\t\n\t  // Complement of _.zip. Unzip accepts an array of arrays and groups\n\t  // each array's elements on shared indices\n\t  _.unzip = function(array) {\n\t    var length = array && _.max(array, getLength).length || 0;\n\t    var result = Array(length);\n\t\n\t    for (var index = 0; index < length; index++) {\n\t      result[index] = _.pluck(array, index);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Converts lists into objects. Pass either a single array of `[key, value]`\n\t  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n\t  // the corresponding values.\n\t  _.object = function(list, values) {\n\t    var result = {};\n\t    for (var i = 0, length = getLength(list); i < length; i++) {\n\t      if (values) {\n\t        result[list[i]] = values[i];\n\t      } else {\n\t        result[list[i][0]] = list[i][1];\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Generator function to create the findIndex and findLastIndex functions\n\t  function createPredicateIndexFinder(dir) {\n\t    return function(array, predicate, context) {\n\t      predicate = cb(predicate, context);\n\t      var length = getLength(array);\n\t      var index = dir > 0 ? 0 : length - 1;\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        if (predicate(array[index], index, array)) return index;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Returns the first index on an array-like that passes a predicate test\n\t  _.findIndex = createPredicateIndexFinder(1);\n\t  _.findLastIndex = createPredicateIndexFinder(-1);\n\t\n\t  // Use a comparator function to figure out the smallest index at which\n\t  // an object should be inserted so as to maintain order. Uses binary search.\n\t  _.sortedIndex = function(array, obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context, 1);\n\t    var value = iteratee(obj);\n\t    var low = 0, high = getLength(array);\n\t    while (low < high) {\n\t      var mid = Math.floor((low + high) / 2);\n\t      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n\t    }\n\t    return low;\n\t  };\n\t\n\t  // Generator function to create the indexOf and lastIndexOf functions\n\t  function createIndexFinder(dir, predicateFind, sortedIndex) {\n\t    return function(array, item, idx) {\n\t      var i = 0, length = getLength(array);\n\t      if (typeof idx == 'number') {\n\t        if (dir > 0) {\n\t            i = idx >= 0 ? idx : Math.max(idx + length, i);\n\t        } else {\n\t            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n\t        }\n\t      } else if (sortedIndex && idx && length) {\n\t        idx = sortedIndex(array, item);\n\t        return array[idx] === item ? idx : -1;\n\t      }\n\t      if (item !== item) {\n\t        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n\t        return idx >= 0 ? idx + i : -1;\n\t      }\n\t      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n\t        if (array[idx] === item) return idx;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Return the position of the first occurrence of an item in an array,\n\t  // or -1 if the item is not included in the array.\n\t  // If the array is large and already in sort order, pass `true`\n\t  // for **isSorted** to use binary search.\n\t  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n\t  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\t\n\t  // Generate an integer Array containing an arithmetic progression. A port of\n\t  // the native Python `range()` function. See\n\t  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\t  _.range = function(start, stop, step) {\n\t    if (stop == null) {\n\t      stop = start || 0;\n\t      start = 0;\n\t    }\n\t    step = step || 1;\n\t\n\t    var length = Math.max(Math.ceil((stop - start) / step), 0);\n\t    var range = Array(length);\n\t\n\t    for (var idx = 0; idx < length; idx++, start += step) {\n\t      range[idx] = start;\n\t    }\n\t\n\t    return range;\n\t  };\n\t\n\t  // Function (ahem) Functions\n\t  // ------------------\n\t\n\t  // Determines whether to execute a function as a constructor\n\t  // or a normal function with the provided arguments\n\t  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n\t    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n\t    var self = baseCreate(sourceFunc.prototype);\n\t    var result = sourceFunc.apply(self, args);\n\t    if (_.isObject(result)) return result;\n\t    return self;\n\t  };\n\t\n\t  // Create a function bound to a given object (assigning `this`, and arguments,\n\t  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n\t  // available.\n\t  _.bind = function(func, context) {\n\t    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n\t    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n\t    var args = slice.call(arguments, 2);\n\t    var bound = function() {\n\t      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Partially apply a function by creating a version that has had some of its\n\t  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n\t  // as a placeholder, allowing any combination of arguments to be pre-filled.\n\t  _.partial = function(func) {\n\t    var boundArgs = slice.call(arguments, 1);\n\t    var bound = function() {\n\t      var position = 0, length = boundArgs.length;\n\t      var args = Array(length);\n\t      for (var i = 0; i < length; i++) {\n\t        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n\t      }\n\t      while (position < arguments.length) args.push(arguments[position++]);\n\t      return executeBound(func, bound, this, this, args);\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Bind a number of an object's methods to that object. Remaining arguments\n\t  // are the method names to be bound. Useful for ensuring that all callbacks\n\t  // defined on an object belong to it.\n\t  _.bindAll = function(obj) {\n\t    var i, length = arguments.length, key;\n\t    if (length <= 1) throw new Error('bindAll must be passed function names');\n\t    for (i = 1; i < length; i++) {\n\t      key = arguments[i];\n\t      obj[key] = _.bind(obj[key], obj);\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Memoize an expensive function by storing its results.\n\t  _.memoize = function(func, hasher) {\n\t    var memoize = function(key) {\n\t      var cache = memoize.cache;\n\t      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n\t      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n\t      return cache[address];\n\t    };\n\t    memoize.cache = {};\n\t    return memoize;\n\t  };\n\t\n\t  // Delays a function for the given number of milliseconds, and then calls\n\t  // it with the arguments supplied.\n\t  _.delay = function(func, wait) {\n\t    var args = slice.call(arguments, 2);\n\t    return setTimeout(function(){\n\t      return func.apply(null, args);\n\t    }, wait);\n\t  };\n\t\n\t  // Defers a function, scheduling it to run after the current call stack has\n\t  // cleared.\n\t  _.defer = _.partial(_.delay, _, 1);\n\t\n\t  // Returns a function, that, when invoked, will only be triggered at most once\n\t  // during a given window of time. Normally, the throttled function will run\n\t  // as much as it can, without ever going more than once per `wait` duration;\n\t  // but if you'd like to disable the execution on the leading edge, pass\n\t  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\t  _.throttle = function(func, wait, options) {\n\t    var context, args, result;\n\t    var timeout = null;\n\t    var previous = 0;\n\t    if (!options) options = {};\n\t    var later = function() {\n\t      previous = options.leading === false ? 0 : _.now();\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    };\n\t    return function() {\n\t      var now = _.now();\n\t      if (!previous && options.leading === false) previous = now;\n\t      var remaining = wait - (now - previous);\n\t      context = this;\n\t      args = arguments;\n\t      if (remaining <= 0 || remaining > wait) {\n\t        if (timeout) {\n\t          clearTimeout(timeout);\n\t          timeout = null;\n\t        }\n\t        previous = now;\n\t        result = func.apply(context, args);\n\t        if (!timeout) context = args = null;\n\t      } else if (!timeout && options.trailing !== false) {\n\t        timeout = setTimeout(later, remaining);\n\t      }\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function, that, as long as it continues to be invoked, will not\n\t  // be triggered. The function will be called after it stops being called for\n\t  // N milliseconds. If `immediate` is passed, trigger the function on the\n\t  // leading edge, instead of the trailing.\n\t  _.debounce = function(func, wait, immediate) {\n\t    var timeout, args, context, timestamp, result;\n\t\n\t    var later = function() {\n\t      var last = _.now() - timestamp;\n\t\n\t      if (last < wait && last >= 0) {\n\t        timeout = setTimeout(later, wait - last);\n\t      } else {\n\t        timeout = null;\n\t        if (!immediate) {\n\t          result = func.apply(context, args);\n\t          if (!timeout) context = args = null;\n\t        }\n\t      }\n\t    };\n\t\n\t    return function() {\n\t      context = this;\n\t      args = arguments;\n\t      timestamp = _.now();\n\t      var callNow = immediate && !timeout;\n\t      if (!timeout) timeout = setTimeout(later, wait);\n\t      if (callNow) {\n\t        result = func.apply(context, args);\n\t        context = args = null;\n\t      }\n\t\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns the first function passed as an argument to the second,\n\t  // allowing you to adjust arguments, run code before and after, and\n\t  // conditionally execute the original function.\n\t  _.wrap = function(func, wrapper) {\n\t    return _.partial(wrapper, func);\n\t  };\n\t\n\t  // Returns a negated version of the passed-in predicate.\n\t  _.negate = function(predicate) {\n\t    return function() {\n\t      return !predicate.apply(this, arguments);\n\t    };\n\t  };\n\t\n\t  // Returns a function that is the composition of a list of functions, each\n\t  // consuming the return value of the function that follows.\n\t  _.compose = function() {\n\t    var args = arguments;\n\t    var start = args.length - 1;\n\t    return function() {\n\t      var i = start;\n\t      var result = args[start].apply(this, arguments);\n\t      while (i--) result = args[i].call(this, result);\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed on and after the Nth call.\n\t  _.after = function(times, func) {\n\t    return function() {\n\t      if (--times < 1) {\n\t        return func.apply(this, arguments);\n\t      }\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed up to (but not including) the Nth call.\n\t  _.before = function(times, func) {\n\t    var memo;\n\t    return function() {\n\t      if (--times > 0) {\n\t        memo = func.apply(this, arguments);\n\t      }\n\t      if (times <= 1) func = null;\n\t      return memo;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will be executed at most one time, no matter how\n\t  // often you call it. Useful for lazy initialization.\n\t  _.once = _.partial(_.before, 2);\n\t\n\t  // Object Functions\n\t  // ----------------\n\t\n\t  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\t  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n\t  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n\t                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\t\n\t  function collectNonEnumProps(obj, keys) {\n\t    var nonEnumIdx = nonEnumerableProps.length;\n\t    var constructor = obj.constructor;\n\t    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\t\n\t    // Constructor is a special case.\n\t    var prop = 'constructor';\n\t    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\t\n\t    while (nonEnumIdx--) {\n\t      prop = nonEnumerableProps[nonEnumIdx];\n\t      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n\t        keys.push(prop);\n\t      }\n\t    }\n\t  }\n\t\n\t  // Retrieve the names of an object's own properties.\n\t  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\t  _.keys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    if (nativeKeys) return nativeKeys(obj);\n\t    var keys = [];\n\t    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve all the property names of an object.\n\t  _.allKeys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve the values of an object's properties.\n\t  _.values = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var values = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      values[i] = obj[keys[i]];\n\t    }\n\t    return values;\n\t  };\n\t\n\t  // Returns the results of applying the iteratee to each element of the object\n\t  // In contrast to _.map it returns an object\n\t  _.mapObject = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys =  _.keys(obj),\n\t          length = keys.length,\n\t          results = {},\n\t          currentKey;\n\t      for (var index = 0; index < length; index++) {\n\t        currentKey = keys[index];\n\t        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n\t      }\n\t      return results;\n\t  };\n\t\n\t  // Convert an object into a list of `[key, value]` pairs.\n\t  _.pairs = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var pairs = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      pairs[i] = [keys[i], obj[keys[i]]];\n\t    }\n\t    return pairs;\n\t  };\n\t\n\t  // Invert the keys and values of an object. The values must be serializable.\n\t  _.invert = function(obj) {\n\t    var result = {};\n\t    var keys = _.keys(obj);\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      result[obj[keys[i]]] = keys[i];\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return a sorted list of the function names available on the object.\n\t  // Aliased as `methods`\n\t  _.functions = _.methods = function(obj) {\n\t    var names = [];\n\t    for (var key in obj) {\n\t      if (_.isFunction(obj[key])) names.push(key);\n\t    }\n\t    return names.sort();\n\t  };\n\t\n\t  // Extend a given object with all the properties in passed-in object(s).\n\t  _.extend = createAssigner(_.allKeys);\n\t\n\t  // Assigns a given object with all the own properties in the passed-in object(s)\n\t  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\t  _.extendOwn = _.assign = createAssigner(_.keys);\n\t\n\t  // Returns the first key on an object that passes a predicate test\n\t  _.findKey = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = _.keys(obj), key;\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      key = keys[i];\n\t      if (predicate(obj[key], key, obj)) return key;\n\t    }\n\t  };\n\t\n\t  // Return a copy of the object only containing the whitelisted properties.\n\t  _.pick = function(object, oiteratee, context) {\n\t    var result = {}, obj = object, iteratee, keys;\n\t    if (obj == null) return result;\n\t    if (_.isFunction(oiteratee)) {\n\t      keys = _.allKeys(obj);\n\t      iteratee = optimizeCb(oiteratee, context);\n\t    } else {\n\t      keys = flatten(arguments, false, false, 1);\n\t      iteratee = function(value, key, obj) { return key in obj; };\n\t      obj = Object(obj);\n\t    }\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      var key = keys[i];\n\t      var value = obj[key];\n\t      if (iteratee(value, key, obj)) result[key] = value;\n\t    }\n\t    return result;\n\t  };\n\t\n\t   // Return a copy of the object without the blacklisted properties.\n\t  _.omit = function(obj, iteratee, context) {\n\t    if (_.isFunction(iteratee)) {\n\t      iteratee = _.negate(iteratee);\n\t    } else {\n\t      var keys = _.map(flatten(arguments, false, false, 1), String);\n\t      iteratee = function(value, key) {\n\t        return !_.contains(keys, key);\n\t      };\n\t    }\n\t    return _.pick(obj, iteratee, context);\n\t  };\n\t\n\t  // Fill in a given object with default properties.\n\t  _.defaults = createAssigner(_.allKeys, true);\n\t\n\t  // Creates an object that inherits from the given prototype object.\n\t  // If additional properties are provided then they will be added to the\n\t  // created object.\n\t  _.create = function(prototype, props) {\n\t    var result = baseCreate(prototype);\n\t    if (props) _.extendOwn(result, props);\n\t    return result;\n\t  };\n\t\n\t  // Create a (shallow-cloned) duplicate of an object.\n\t  _.clone = function(obj) {\n\t    if (!_.isObject(obj)) return obj;\n\t    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n\t  };\n\t\n\t  // Invokes interceptor with the obj, and then returns obj.\n\t  // The primary purpose of this method is to \"tap into\" a method chain, in\n\t  // order to perform operations on intermediate results within the chain.\n\t  _.tap = function(obj, interceptor) {\n\t    interceptor(obj);\n\t    return obj;\n\t  };\n\t\n\t  // Returns whether an object has a given set of `key:value` pairs.\n\t  _.isMatch = function(object, attrs) {\n\t    var keys = _.keys(attrs), length = keys.length;\n\t    if (object == null) return !length;\n\t    var obj = Object(object);\n\t    for (var i = 0; i < length; i++) {\n\t      var key = keys[i];\n\t      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t\n\t  // Internal recursive comparison function for `isEqual`.\n\t  var eq = function(a, b, aStack, bStack) {\n\t    // Identical objects are equal. `0 === -0`, but they aren't identical.\n\t    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n\t    if (a === b) return a !== 0 || 1 / a === 1 / b;\n\t    // A strict comparison is necessary because `null == undefined`.\n\t    if (a == null || b == null) return a === b;\n\t    // Unwrap any wrapped objects.\n\t    if (a instanceof _) a = a._wrapped;\n\t    if (b instanceof _) b = b._wrapped;\n\t    // Compare `[[Class]]` names.\n\t    var className = toString.call(a);\n\t    if (className !== toString.call(b)) return false;\n\t    switch (className) {\n\t      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n\t      case '[object RegExp]':\n\t      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\t      case '[object String]':\n\t        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n\t        // equivalent to `new String(\"5\")`.\n\t        return '' + a === '' + b;\n\t      case '[object Number]':\n\t        // `NaN`s are equivalent, but non-reflexive.\n\t        // Object(NaN) is equivalent to NaN\n\t        if (+a !== +a) return +b !== +b;\n\t        // An `egal` comparison is performed for other numeric values.\n\t        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\t      case '[object Date]':\n\t      case '[object Boolean]':\n\t        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n\t        // millisecond representations. Note that invalid dates with millisecond representations\n\t        // of `NaN` are not equivalent.\n\t        return +a === +b;\n\t    }\n\t\n\t    var areArrays = className === '[object Array]';\n\t    if (!areArrays) {\n\t      if (typeof a != 'object' || typeof b != 'object') return false;\n\t\n\t      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n\t      // from different frames are.\n\t      var aCtor = a.constructor, bCtor = b.constructor;\n\t      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n\t                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n\t                          && ('constructor' in a && 'constructor' in b)) {\n\t        return false;\n\t      }\n\t    }\n\t    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n\t    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\t\n\t    // Initializing stack of traversed objects.\n\t    // It's done here since we only need them for objects and arrays comparison.\n\t    aStack = aStack || [];\n\t    bStack = bStack || [];\n\t    var length = aStack.length;\n\t    while (length--) {\n\t      // Linear search. Performance is inversely proportional to the number of\n\t      // unique nested structures.\n\t      if (aStack[length] === a) return bStack[length] === b;\n\t    }\n\t\n\t    // Add the first object to the stack of traversed objects.\n\t    aStack.push(a);\n\t    bStack.push(b);\n\t\n\t    // Recursively compare objects and arrays.\n\t    if (areArrays) {\n\t      // Compare array lengths to determine if a deep comparison is necessary.\n\t      length = a.length;\n\t      if (length !== b.length) return false;\n\t      // Deep compare the contents, ignoring non-numeric properties.\n\t      while (length--) {\n\t        if (!eq(a[length], b[length], aStack, bStack)) return false;\n\t      }\n\t    } else {\n\t      // Deep compare objects.\n\t      var keys = _.keys(a), key;\n\t      length = keys.length;\n\t      // Ensure that both objects contain the same number of properties before comparing deep equality.\n\t      if (_.keys(b).length !== length) return false;\n\t      while (length--) {\n\t        // Deep compare each member\n\t        key = keys[length];\n\t        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n\t      }\n\t    }\n\t    // Remove the first object from the stack of traversed objects.\n\t    aStack.pop();\n\t    bStack.pop();\n\t    return true;\n\t  };\n\t\n\t  // Perform a deep comparison to check if two objects are equal.\n\t  _.isEqual = function(a, b) {\n\t    return eq(a, b);\n\t  };\n\t\n\t  // Is a given array, string, or object empty?\n\t  // An \"empty\" object has no enumerable own-properties.\n\t  _.isEmpty = function(obj) {\n\t    if (obj == null) return true;\n\t    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n\t    return _.keys(obj).length === 0;\n\t  };\n\t\n\t  // Is a given value a DOM element?\n\t  _.isElement = function(obj) {\n\t    return !!(obj && obj.nodeType === 1);\n\t  };\n\t\n\t  // Is a given value an array?\n\t  // Delegates to ECMA5's native Array.isArray\n\t  _.isArray = nativeIsArray || function(obj) {\n\t    return toString.call(obj) === '[object Array]';\n\t  };\n\t\n\t  // Is a given variable an object?\n\t  _.isObject = function(obj) {\n\t    var type = typeof obj;\n\t    return type === 'function' || type === 'object' && !!obj;\n\t  };\n\t\n\t  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n\t  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n\t    _['is' + name] = function(obj) {\n\t      return toString.call(obj) === '[object ' + name + ']';\n\t    };\n\t  });\n\t\n\t  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n\t  // there isn't any inspectable \"Arguments\" type.\n\t  if (!_.isArguments(arguments)) {\n\t    _.isArguments = function(obj) {\n\t      return _.has(obj, 'callee');\n\t    };\n\t  }\n\t\n\t  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n\t  // IE 11 (#1621), and in Safari 8 (#1929).\n\t  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n\t    _.isFunction = function(obj) {\n\t      return typeof obj == 'function' || false;\n\t    };\n\t  }\n\t\n\t  // Is a given object a finite number?\n\t  _.isFinite = function(obj) {\n\t    return isFinite(obj) && !isNaN(parseFloat(obj));\n\t  };\n\t\n\t  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\t  _.isNaN = function(obj) {\n\t    return _.isNumber(obj) && obj !== +obj;\n\t  };\n\t\n\t  // Is a given value a boolean?\n\t  _.isBoolean = function(obj) {\n\t    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n\t  };\n\t\n\t  // Is a given value equal to null?\n\t  _.isNull = function(obj) {\n\t    return obj === null;\n\t  };\n\t\n\t  // Is a given variable undefined?\n\t  _.isUndefined = function(obj) {\n\t    return obj === void 0;\n\t  };\n\t\n\t  // Shortcut function for checking if an object has a given property directly\n\t  // on itself (in other words, not on a prototype).\n\t  _.has = function(obj, key) {\n\t    return obj != null && hasOwnProperty.call(obj, key);\n\t  };\n\t\n\t  // Utility Functions\n\t  // -----------------\n\t\n\t  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n\t  // previous owner. Returns a reference to the Underscore object.\n\t  _.noConflict = function() {\n\t    root._ = previousUnderscore;\n\t    return this;\n\t  };\n\t\n\t  // Keep the identity function around for default iteratees.\n\t  _.identity = function(value) {\n\t    return value;\n\t  };\n\t\n\t  // Predicate-generating functions. Often useful outside of Underscore.\n\t  _.constant = function(value) {\n\t    return function() {\n\t      return value;\n\t    };\n\t  };\n\t\n\t  _.noop = function(){};\n\t\n\t  _.property = property;\n\t\n\t  // Generates a function for a given object that returns a given property.\n\t  _.propertyOf = function(obj) {\n\t    return obj == null ? function(){} : function(key) {\n\t      return obj[key];\n\t    };\n\t  };\n\t\n\t  // Returns a predicate for checking whether an object has a given set of\n\t  // `key:value` pairs.\n\t  _.matcher = _.matches = function(attrs) {\n\t    attrs = _.extendOwn({}, attrs);\n\t    return function(obj) {\n\t      return _.isMatch(obj, attrs);\n\t    };\n\t  };\n\t\n\t  // Run a function **n** times.\n\t  _.times = function(n, iteratee, context) {\n\t    var accum = Array(Math.max(0, n));\n\t    iteratee = optimizeCb(iteratee, context, 1);\n\t    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n\t    return accum;\n\t  };\n\t\n\t  // Return a random integer between min and max (inclusive).\n\t  _.random = function(min, max) {\n\t    if (max == null) {\n\t      max = min;\n\t      min = 0;\n\t    }\n\t    return min + Math.floor(Math.random() * (max - min + 1));\n\t  };\n\t\n\t  // A (possibly faster) way to get the current timestamp as an integer.\n\t  _.now = Date.now || function() {\n\t    return new Date().getTime();\n\t  };\n\t\n\t   // List of HTML entities for escaping.\n\t  var escapeMap = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#x27;',\n\t    '`': '&#x60;'\n\t  };\n\t  var unescapeMap = _.invert(escapeMap);\n\t\n\t  // Functions for escaping and unescaping strings to/from HTML interpolation.\n\t  var createEscaper = function(map) {\n\t    var escaper = function(match) {\n\t      return map[match];\n\t    };\n\t    // Regexes for identifying a key that needs to be escaped\n\t    var source = '(?:' + _.keys(map).join('|') + ')';\n\t    var testRegexp = RegExp(source);\n\t    var replaceRegexp = RegExp(source, 'g');\n\t    return function(string) {\n\t      string = string == null ? '' : '' + string;\n\t      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n\t    };\n\t  };\n\t  _.escape = createEscaper(escapeMap);\n\t  _.unescape = createEscaper(unescapeMap);\n\t\n\t  // If the value of the named `property` is a function then invoke it with the\n\t  // `object` as context; otherwise, return it.\n\t  _.result = function(object, property, fallback) {\n\t    var value = object == null ? void 0 : object[property];\n\t    if (value === void 0) {\n\t      value = fallback;\n\t    }\n\t    return _.isFunction(value) ? value.call(object) : value;\n\t  };\n\t\n\t  // Generate a unique integer id (unique within the entire client session).\n\t  // Useful for temporary DOM ids.\n\t  var idCounter = 0;\n\t  _.uniqueId = function(prefix) {\n\t    var id = ++idCounter + '';\n\t    return prefix ? prefix + id : id;\n\t  };\n\t\n\t  // By default, Underscore uses ERB-style template delimiters, change the\n\t  // following template settings to use alternative delimiters.\n\t  _.templateSettings = {\n\t    evaluate    : /<%([\\s\\S]+?)%>/g,\n\t    interpolate : /<%=([\\s\\S]+?)%>/g,\n\t    escape      : /<%-([\\s\\S]+?)%>/g\n\t  };\n\t\n\t  // When customizing `templateSettings`, if you don't want to define an\n\t  // interpolation, evaluation or escaping regex, we need one that is\n\t  // guaranteed not to match.\n\t  var noMatch = /(.)^/;\n\t\n\t  // Certain characters need to be escaped so that they can be put into a\n\t  // string literal.\n\t  var escapes = {\n\t    \"'\":      \"'\",\n\t    '\\\\':     '\\\\',\n\t    '\\r':     'r',\n\t    '\\n':     'n',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\t\n\t  var escapeChar = function(match) {\n\t    return '\\\\' + escapes[match];\n\t  };\n\t\n\t  // JavaScript micro-templating, similar to John Resig's implementation.\n\t  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t  // and correctly escapes quotes within interpolated code.\n\t  // NB: `oldSettings` only exists for backwards compatibility.\n\t  _.template = function(text, settings, oldSettings) {\n\t    if (!settings && oldSettings) settings = oldSettings;\n\t    settings = _.defaults({}, settings, _.templateSettings);\n\t\n\t    // Combine delimiters into one regular expression via alternation.\n\t    var matcher = RegExp([\n\t      (settings.escape || noMatch).source,\n\t      (settings.interpolate || noMatch).source,\n\t      (settings.evaluate || noMatch).source\n\t    ].join('|') + '|$', 'g');\n\t\n\t    // Compile the template source, escaping string literals appropriately.\n\t    var index = 0;\n\t    var source = \"__p+='\";\n\t    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t      source += text.slice(index, offset).replace(escaper, escapeChar);\n\t      index = offset + match.length;\n\t\n\t      if (escape) {\n\t        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t      } else if (interpolate) {\n\t        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t      } else if (evaluate) {\n\t        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t      }\n\t\n\t      // Adobe VMs need the match returned to produce the correct offest.\n\t      return match;\n\t    });\n\t    source += \"';\\n\";\n\t\n\t    // If a variable is not specified, place data values in local scope.\n\t    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\t\n\t    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t      source + 'return __p;\\n';\n\t\n\t    try {\n\t      var render = new Function(settings.variable || 'obj', '_', source);\n\t    } catch (e) {\n\t      e.source = source;\n\t      throw e;\n\t    }\n\t\n\t    var template = function(data) {\n\t      return render.call(this, data, _);\n\t    };\n\t\n\t    // Provide the compiled source as a convenience for precompilation.\n\t    var argument = settings.variable || 'obj';\n\t    template.source = 'function(' + argument + '){\\n' + source + '}';\n\t\n\t    return template;\n\t  };\n\t\n\t  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\t  _.chain = function(obj) {\n\t    var instance = _(obj);\n\t    instance._chain = true;\n\t    return instance;\n\t  };\n\t\n\t  // OOP\n\t  // ---------------\n\t  // If Underscore is called as a function, it returns a wrapped object that\n\t  // can be used OO-style. This wrapper holds altered versions of all the\n\t  // underscore functions. Wrapped objects may be chained.\n\t\n\t  // Helper function to continue chaining intermediate results.\n\t  var result = function(instance, obj) {\n\t    return instance._chain ? _(obj).chain() : obj;\n\t  };\n\t\n\t  // Add your own custom functions to the Underscore object.\n\t  _.mixin = function(obj) {\n\t    _.each(_.functions(obj), function(name) {\n\t      var func = _[name] = obj[name];\n\t      _.prototype[name] = function() {\n\t        var args = [this._wrapped];\n\t        push.apply(args, arguments);\n\t        return result(this, func.apply(_, args));\n\t      };\n\t    });\n\t  };\n\t\n\t  // Add all of the Underscore functions to the wrapper object.\n\t  _.mixin(_);\n\t\n\t  // Add all mutator Array functions to the wrapper.\n\t  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      var obj = this._wrapped;\n\t      method.apply(obj, arguments);\n\t      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n\t      return result(this, obj);\n\t    };\n\t  });\n\t\n\t  // Add all accessor Array functions to the wrapper.\n\t  _.each(['concat', 'join', 'slice'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      return result(this, method.apply(this._wrapped, arguments));\n\t    };\n\t  });\n\t\n\t  // Extracts the result from a wrapped and chained object.\n\t  _.prototype.value = function() {\n\t    return this._wrapped;\n\t  };\n\t\n\t  // Provide unwrapping proxy for some methods used in engine operations\n\t  // such as arithmetic and JSON stringification.\n\t  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\t\n\t  _.prototype.toString = function() {\n\t    return '' + this._wrapped;\n\t  };\n\t\n\t  // AMD registration happens at the end for compatibility with AMD loaders\n\t  // that may not enforce next-turn semantics on modules. Even though general\n\t  // practice for AMD registration is to be anonymous, underscore registers\n\t  // as a named module because, like jQuery, it is a base library that is\n\t  // popular enough to be bundled in a third party lib, but not be part of\n\t  // an AMD load request. Those cases could generate an error when an\n\t  // anonymous define() is called outside of a loader request.\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}.call(this));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Game = (function () {\r\n\t    function Game(introStep) {\r\n\t        this.introStep = introStep;\r\n\t    }\r\n\t    return Game;\r\n\t}());\r\n\tmodule.exports = Game;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Civilization = (function () {\r\n\t    function Civilization(civName, leaderName, location) {\r\n\t        this.civName = civName;\r\n\t        this.leaderName = leaderName;\r\n\t        this.location = location;\r\n\t        this.leaderTraits = [];\r\n\t        this.leaderTraitsMax = 3;\r\n\t    }\r\n\t    return Civilization;\r\n\t}());\r\n\tmodule.exports = Civilization;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Templates = (function () {\r\n\t    function Templates() {\r\n\t        this.startScreen = \"\\n    <section class='clickopolis-intro'>\\n      <h1>Clickopolis</h1>\\n      <div class=\\\"start-options\\\">\\n        <button class=\\\"large-btn start-btn load-btn\\\">Load Game...</button>\\n        <button class=\\\"large-btn start-btn new-btn\\\">New Game</button>\\n        <button class=\\\"large-btn start-btn current-btn\\\">\\n          <p class=\\\"current-game-heading\\\">Current Game -</p>\\n          <p>\\n            <span>\\n              <img src=\\\"img/achievements.png\\\"> 5\\n            </span>\\n            <span>\\n              <img src=\\\"img/strength.png\\\"> 33\\n            </span>\\n            <span>\\n              <img src=\\\"img/defense.png\\\"> 44\\n            </span>\\n            <span>\\n              <img src=\\\"img/legacy.png\\\"> 2\\n            </span>\\n            <span>\\n              <img src=\\\"img/coin.png\\\"> 1K\\n            </span>\\n            <span>\\n              <img src=\\\"img/wonder.png\\\"> 1\\n            </span>\\n          </p>\\n        </button>\\n      </div>\\n      <!-- <button class='next-btn'>Next &rarr;</button> -->\\n    </section>\\n  \";\r\n\t        this.settingsScreen = \"\\n    <section class='clickopolis-intro'>\\n      <img class='clickopolis-logo custom-size-img' src='img/clickopolis-logo.png'>\\n      <p>Starting from the flames of the ancient world, you will progress steadily towards modernity&hellip;and beyond. You, the leader of a small faction of hunter-gatherers, have decided to settle\\n        <select id=\\\"location\\\">\\n          <option value=\\\"none\\\">select an option!</option>\\n          <option value=\\\"coast\\\">by the Coast</option>\\n          <option value=\\\"oasis\\\">in an Oasis</option>\\n          <option value=\\\"forest\\\">in a Forest</option>\\n          <option value=\\\"tundra\\\">in a Tundra</option>\\n          <option value=\\\"iceberg\\\">on an Iceberg</option>\\n        </select>\\n      </p>\\n      <p>Your name is <input type=\\\"text\\\" id=\\\"leaderName\\\" maxlength=\\\"10\\\" size=\\\"10\\\" placeholder=\\\"Jake\\\"> of <input type=\\\"text\\\" id=\\\"civName\\\" placeholder=\\\"Jaketopia\\\" maxlength=\\\"20\\\"></p>\\n      <p>You are a(n)\\n        <select id=\\\"trait\\\">\\n          <option value=\\\"aggressive\\\">aggressive</option>\\n          <option value=\\\"cosmpolitan\\\">cosmpolitan</option>\\n          <option value=\\\"daring\\\">daring</option>\\n          <option value=\\\"expansionist\\\">expansionist</option>\\n          <option value=\\\"industrious\\\">industrious</option>\\n          <option value=\\\"isolationist\\\">isolationist</option>\\n          <option value=\\\"pacifistic\\\">pacifistic</option>\\n          <option value=\\\"persuasive\\\">persuasive</option>\\n        </select>\\n       leader.</p>\\n\\n       <button class='begin-btn'>Begin Game!</button>\\n\\n    </section>\\n  \";\r\n\t        this.resourcesScreen = \"\\n    <section class='screen resources-screen'>\\n      <h2><img src='img/resources.png'> Resources</h2>\\n      <section class='resources-screen-inner'>\\n        <div class='panel food-panel'>\\n          <button class='food-btn'><img src='img/food-alt.png'> Grow Food</button>\\n          <span class='resource-info'></span>\\n        </div>\\n        <div class='panel prod-panel'>\\n          <button class='prod-btn'><img src='img/prod.png'> Create Production</button>\\n        </div>\\n\\n        <div class='panel resources-panel'>\\n          <span class='resource' data-resource='stone'>\\n            <img src='img/stone.png'> <span>25</span>\\n          </span>\\n        </div>\\n\\n      </section>\\n    </section>\\n\\n  \";\r\n\t        this.citizensScreen = \"\\n    <section class='screen citizens-screen'>\\n      <h2>Citizens</h2>\\n      <section class='citizens-screen-inner'>\\n        <div class='row citizen-farmer'>\\n        </div>\\n      </section>\\n    </section>\\n  \";\r\n\t    }\r\n\t    Templates.prototype.createStartScreen = function (playerCiv) {\r\n\t        var startScreen = \"\\n      <section class='clickopolis-intro'>\\n        <h1><img class='clickopolis-logo custom-size-img' alt='Clickopolis' src='img/clickopolis-logo.png'></h1>\\n        <div class=\\\"start-options\\\">\\n          <button class=\\\"large-btn start-btn load-btn\\\">Load Game...</button>\\n          <button class=\\\"large-btn start-btn new-btn\\\">New Game</button>\\n          <button class=\\\"large-btn start-btn current-btn\\\">\\n            <p class=\\\"current-game-heading\\\">Current Game: \" + playerCiv.leaderName + \" of \" + playerCiv.civName + \"</p>\\n            <p>\\n              <span>\\n                <img src=\\\"img/achievements.png\\\"> 5\\n              </span>\\n              <span>\\n                <img src=\\\"img/strength.png\\\"> 33\\n              </span>\\n              <span>\\n                <img src=\\\"img/defense.png\\\"> 44\\n              </span>\\n              <span>\\n                <img src=\\\"img/legacy.png\\\"> 2\\n              </span>\\n              <span>\\n                <img src=\\\"img/coin.png\\\"> 1K\\n              </span>\\n              <span>\\n                <img src=\\\"img/wonder.png\\\"> 1\\n              </span>\\n            </p>\\n          </button>\\n        </div>\\n        <!-- <button class='next-btn'>Next &rarr;</button> -->\\n      </section>\\n    \";\r\n\t        return startScreen;\r\n\t    };\r\n\t    ;\r\n\t    Templates.prototype.createScreenHeader = function (playerCiv) {\r\n\t        var screenHeader = \"\\n      <header class='screen-header'>\\n        <h1>Clickopolis</h1>\\n        <h2>\" + playerCiv.leaderName + \" of \" + playerCiv.civName + \"</h2>\\n      </header>\\n    \";\r\n\t        return screenHeader;\r\n\t    };\r\n\t    Templates.prototype.createCitizenScreen = function (playerCiv) {\r\n\t        var citizensScreen = \"\\n      <section class='screen citizens-screen'>\\n        <h2>Citizens</h2>\\n        <section class='citizens-screen-inner'>\\n          <div class='row citizen-farmer'>\\n            \" + playerCiv.civName + \"\\n            \" + playerCiv.leaderName + \"\\n            \" + playerCiv.leaderTraits[0] + \"\\n          </div>\\n        </section>\\n      </section>\\n    \";\r\n\t        return citizensScreen;\r\n\t    };\r\n\t    return Templates;\r\n\t}());\r\n\tmodule.exports = Templates;\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a3d93069a5c322331bab\n **/","// <reference path=\"store.d.ts\" />\r\n// <reference path=\"underscore.d.ts\" />\r\n\r\nimport _ = require('underscore');\r\nimport Game = require('./game');\r\nimport Settings = require('./settings');\r\nimport Civilization = require('./civilization');\r\nimport Resource = require('./resource');\r\nimport Templates = require('./template');\r\nimport notify = require('./notify');\r\n\r\n\r\nconsole.log(_.random(0, 100));\r\n\r\nlet game:Game = new Game(0);\r\nlet playerCiv:Civilization;\r\nlet templates:Templates = new Templates();\r\n\r\n\r\n\r\n\r\n\r\nfunction savePlayer():void {\r\n  store.set('playerCiv', playerCiv);\r\n  console.log(store.get('playerCiv'));\r\n}\r\n\r\nfunction removeItem(arr:any[], item:any) {\r\n  for (var i = arr.length - 1; i--;) {\r\n    if (arr[i] === item) arr.splice(i, 1);\r\n  }\r\n}\r\n\r\nfunction prepend(node:any, html:string) {\r\n  let el = <HTMLElement>document.querySelector(node);\r\n  el.insertAdjacentHTML('beforeend', html);\r\n}\r\n\r\nfunction append(node:any, html:string) {\r\n  let el = <HTMLElement>document.querySelector(node);\r\n  el.insertAdjacentHTML('afterend', html);\r\n}\r\n\r\nfunction bindElement(node:string, eventType:string, callback:Function) {\r\n  let el = <HTMLElement>document.querySelector(node);\r\n  el.addEventListener(eventType, function( event ) {\r\n    console.log(callback)\r\n    return callback();\r\n  });\r\n}\r\n\r\nfunction unbindElement(node:string, eventType:string) {\r\n\r\n}\r\n\r\nfunction hideElement(element:HTMLElement) {\r\n  element = <HTMLElement>element;\r\n  element.className += \" hidden\";\r\n}\r\n\r\nfunction removeElement(element:HTMLElement) {\r\n  element = <HTMLElement>element;\r\n  element.remove();\r\n}\r\n\r\nfunction startGame() {\r\n  if (store.get('playerCiv') !== undefined) {\r\n    let loadCiv = store.get('playerCiv');\r\n    playerCiv = new Civilization(loadCiv.civName, loadCiv.leaderName, loadCiv.location);\r\n    startSavedGame();\r\n  } else {\r\n    startNewGame();\r\n    playerCiv = new Civilization('', '', '');\r\n  }\r\n}\r\n\r\nfunction startSavedGame() {\r\n  console.debug(\"Loading Saved Game...\");\r\n  append('body', templates.createStartScreen(playerCiv));\r\n  //store.clear();\r\n\r\n  bindElement('.load-btn', 'click', function() {\r\n    createGameUI();\r\n  });\r\n\r\n  bindElement('.current-btn', 'click', function() {\r\n    createGameUI();\r\n  });\r\n};\r\n\r\n\r\nfunction startNewGame() {\r\n  console.debug(\"Starting New Game...\");\r\n\r\n  append('body', templates.settingsScreen);\r\n\r\n  // bindElement('.new-btn', 'click', function () {\r\n  //   console.log('Hey...is this thing working??');\r\n  // });\r\n\r\n  bindElement('.begin-btn', 'click', function() {\r\n    //console.log('hi');\r\n    setPlayerCiv();\r\n    createGameUI();\r\n  });\r\n\r\n  document.querySelector('#trait').addEventListener('change', function() {\r\n    traitsSelection(0);\r\n  });\r\n\r\n\r\n};\r\n\r\n\r\n\r\nfunction traitsSelection(index:number) {\r\n  let traitSelect = <HTMLSelectElement>document.querySelector('#trait');\r\n  let trait = traitSelect.value;\r\n  playerCiv.leaderTraits[index] = trait;\r\n  console.log(traitSelect.value, playerCiv.leaderTraits);\r\n  savePlayer();\r\n}\r\n\r\nfunction createGameUI() {\r\n  let intro = <HTMLElement>document.querySelector('.clickopolis-intro');\r\n  let clickopolisGame = document.createElement('section');\r\n\r\n  clickopolisGame.setAttribute('class', 'clickopolis');\r\n  clickopolisGame.setAttribute('id', 'clickopolis');\r\n  clickopolisGame.innerHTML = templates.createScreenHeader(playerCiv) + templates.resourcesScreen + templates.createCitizenScreen(playerCiv);\r\n\r\n  intro.remove();\r\n\r\n  document.body.appendChild(clickopolisGame);\r\n  //append('body', templates.resourcesScreen);\r\n\r\n}\r\n\r\nfunction setPlayerCiv() {\r\n  let civNameInput = <HTMLInputElement>document.querySelector('#civName'),\r\n      leaderNameInput = <HTMLInputElement>document.querySelector('#leaderName'),\r\n      location = <HTMLSelectElement>document.querySelector('#location');\r\n  playerCiv.civName = civNameInput.value;\r\n  playerCiv.leaderName = leaderNameInput.value;\r\n  playerCiv.location = location.value;\r\n  savePlayer();\r\n}\r\n\r\n\r\n// function startScreen():void {\r\n//   let htmlString:string = `\r\n//     <section class=\"clickopolis-start\">\r\n      // <h1>Clickopolis</h1>\r\n      // <div class=\"start-options\">\r\n      //   <button class=\"large-btn start-btn load-btn\">Load Game...</button>\r\n      //   <button class=\"large-btn start-btn new-btn\">New Game</button>\r\n      //   <button class=\"large-btn start-btn current-btn\">\r\n      //     <p class=\"current-game-heading\">Current Game - ${playerCiv.leaderName} of ${playerCiv.civName} </p>\r\n      //     <p>\r\n      //       <span>\r\n      //         <img src=\"img/achievements.png\"> 5\r\n      //       </span>\r\n      //       <span>\r\n      //         <img src=\"img/strength.png\"> 33\r\n      //       </span>\r\n      //       <span>\r\n      //         <img src=\"img/defense.png\"> 44\r\n      //       </span>\r\n      //       <span>\r\n      //         <img src=\"img/legacy.png\"> 2\r\n      //       </span>\r\n      //       <span>\r\n      //         <img src=\"img/coin.png\"> 1K\r\n      //       </span>\r\n      //       <span>\r\n      //         <img src=\"img/wonder.png\"> 1\r\n      //       </span>\r\n      //     </p>\r\n      //   </button>\r\n      // </div>\r\n//     </section>\r\n//   `;\r\n//   document.body.insertAdjacentHTML('beforeend', htmlString);\r\n//   bindLoadGameButton();\r\n//   bindNewGameButton();\r\n//   bindCurrentGameButton();\r\n// }\r\n\r\n// function bindLoadGameButton() {};\r\n// function bindNewGameButton():void {\r\n//   document.querySelector('.new-btn').addEventListener('click', function(event) {\r\n//     newGameStart();\r\n//   });\r\n// };\r\nfunction bindCurrentGameButton() {};\r\n\r\n// function newGameStart():void {\r\n//   let htmlString = `\r\n//     <section class=\"clickopolis-intro\">\r\n//       <span class=\"step-one\">\r\n//         <h1>Welcome to the World of Clickopolis!</h1>\r\n//         <p>Starting from the flames of the ancient world, you will progress steadily towards modernity&hellip;and beyond. You, the leader of a small faction of hunter-gatherers, have decided to settle\r\n//           <select id=\"location\">\r\n//             <option value=\"none\">select an option!</option>\r\n//             <option value=\"coast\">by the Coast</option>\r\n//             <option value=\"oasis\">in an Oasis</option>\r\n//             <option value=\"forest\">in a Forest</option>\r\n//             <option value=\"tundra\">in a Tundra</option>\r\n//             <option value=\"iceberg\">on an Iceberg</option>\r\n//           </select>\r\n//         </p>\r\n//         <p>Your name? <input type=\"text\" id=\"leaderName\" placeholder=\"Jake\"><br><br> And the name of your empire? <input type=\"text\" id=\"civName\" placeholder=\"Jaketopia\"></p>\r\n//       </span>\r\n//\r\n//       <button class=\"step-btn next-btn\">Next &rarr;</button>\r\n//     </section>\r\n//   `;\r\n//   document.querySelector('.clickopolis-start').remove();\r\n//   prepend('body', htmlString);\r\n//   bindNextButton();\r\n//   //bindPrevButton();\r\n// }\r\n\r\n\r\n\r\nfunction bindNextButton() {\r\n  document.querySelector('.next-btn').addEventListener('click', function() {\r\n\r\n    switch (game.introStep) {\r\n      case 0:\r\n        let lni = <HTMLInputElement>document.getElementById('leaderName');\r\n        let cni = <HTMLInputElement>document.getElementById('civName');\r\n        let loc = <HTMLSelectElement>document.getElementById('location');\r\n        createCiv(game.introStep, lni, cni, loc);\r\n        //game.introStep++;\r\n      break;\r\n      case 1:\r\n        console.log('1 step ay');\r\n        configureSettings();\r\n        game.introStep++;\r\n      break;\r\n      default:\r\n      break;\r\n    }\r\n\r\n  });\r\n}\r\n\r\nfunction validateStepOne() {\r\n\r\n}\r\n\r\nfunction createCiv(step:number, leaderNameInput:HTMLInputElement, civNameInput:HTMLInputElement, locationInput:HTMLSelectElement):void {\r\n  let leaderName:string = leaderNameInput.value;\r\n  let civName:string = civNameInput.value;\r\n  let location:string = locationInput.value;\r\n  let prevBtn:HTMLButtonElement = <HTMLButtonElement>document.querySelector('.prev-btn');\r\n  let nextBtn:HTMLButtonElement = <HTMLButtonElement>document.querySelector('.next-btn');\r\n\r\n  playerCiv.leaderName = leaderName;\r\n  playerCiv.civName = civName;\r\n  playerCiv.location = location;\r\n\r\n  savePlayer();\r\n\r\n  if (step === 0) {\r\n    if (leaderName === \"\" || civName === \"\" || location === \"none\") {\r\n      console.error('Not all fields filled out.')\r\n    } else {\r\n      createCivStepOne(leaderName, civName, location);\r\n      prevBtn.disabled = false;\r\n      game.introStep = 1;\r\n    }\r\n  }\r\n  if (step === 1){\r\n\r\n  }\r\n\r\n}\r\n\r\nfunction createCivStepOne(leaderName:string, civName:string, location:string):void {\r\n  //let playerCiv:Civilization = new Civilization(civName, leaderName, location);\r\n  let stepOne:HTMLElement = <HTMLElement>document.querySelector('.step-one');\r\n  let stepTwo:string = `\r\n    <span class='step-two'>\r\n      <h2>Welcome ${playerCiv.leaderName}, leader of ${playerCiv.civName}, brave inhabitant of the ${playerCiv.location}!</h2>\r\n      <p>What are your traits, O Glorious Leader? (Select <em id='traitsLeft'>3</em>)</p>\r\n      <div class='checkbox-list trait-cbl'>\r\n        <label><input type='checkbox' value='aggressive'>Aggressive</label>\r\n        <label><input type='checkbox' value='communal'>Communal</label>\r\n        <label><input type='checkbox' value='cunning'>Cunning</label>\r\n        <label><input type='checkbox' value='deliberate'>Deliberate</label>\r\n        <label><input type='checkbox' value='expansionist'>Expansionist</label>\r\n        <label><input type='checkbox' value='individualistic'>Individualistic</label>\r\n        <label><input type='checkbox' value='industrious'>Industrious</label>\r\n        <label><input type='checkbox' value='isolationist'>Isolationist</label>\r\n        <label><input type='checkbox' value='pacifistic'>Pacificistic</label>\r\n        <label><input type='checkbox' value='persuasive'>Persuasive</label>\r\n      </div>\r\n    </span>`;\r\n  stepOne.insertAdjacentHTML('afterend', stepTwo);\r\n  stepOne.className += \" hidden\";\r\n  activateTraitList(playerCiv);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction activateTraitList(playerCiv:Civilization):void {\r\n  let traitCheckBoxes:NodeListOf<HTMLInputElement> = <NodeListOf<HTMLInputElement>>document.querySelectorAll('.trait-cbl input');\r\n  let traitsLeft:HTMLSpanElement = <HTMLSpanElement>document.getElementById('traitsLeft');\r\n  for (var i = 0; i < traitCheckBoxes.length; i++) {\r\n    traitCheckBoxes[i].addEventListener('change', function(event) {\r\n\r\n\r\n      if (this.checked === true) {\r\n        if (playerCiv.leaderTraits.length >= 3) {\r\n          console.error(\"Exceedeed max traits.\");\r\n          event.preventDefault();\r\n        } else {\r\n          playerCiv.leaderTraits.push(this.value);\r\n          console.log(playerCiv.leaderTraits);\r\n          traitsLeft.textContent = (3 - playerCiv.leaderTraits.length).toString();\r\n        }\r\n\r\n      } else {\r\n        removeItem(playerCiv.leaderTraits, this.value);\r\n        console.log(playerCiv.leaderTraits);\r\n        traitsLeft.textContent = (playerCiv.leaderTraits.length).toString();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction configureSettings() {\r\n  let stepTwo = <HTMLElement>document.querySelector('.step-two');\r\n  hideElement(stepTwo);\r\n  let stepThree = `\r\n    <section class='step-three'>\r\n      <h2>Configure & Confirm Your Settings</h2>\r\n      <label>Name</label><input value=\"${playerCiv.leaderName}\"><br>\r\n      <label>Civilization</label><input value=\"${playerCiv.civName}\"><br>\r\n      <label>Settlement<label><input value=\"${playerCiv.location}\"><br>\r\n\r\n    </section>\r\n  `;\r\n  prepend('.stepThree', stepThree);\r\n\r\n}\r\n\r\nfunction init() {\r\n  startGame();\r\n}\r\n\r\ninit();\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/index.ts\n **/","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/underscore/underscore.js\n ** module id = 1\n ** module chunks = 0\n **/","class Game {\r\n  introStep: number;\r\n  restarts: number;\r\n  legacyPoints: number;\r\n\r\n  constructor(introStep: number) {\r\n    this.introStep = introStep;\r\n  }\r\n}\r\n\r\nexport = Game;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/game.ts\n **/","class Civilization {\r\n  civName: string;\r\n\r\n  leaderName: string;\r\n  leaderTraits: string[];\r\n  leaderTraitsMax: number;\r\n\r\n  location: string;\r\n\r\n  happiness: number;\r\n  anger: number;\r\n  influence: number;\r\n  legacy: number;\r\n\r\n  achievements: number;\r\n\r\n  goldenAges: number;\r\n  goldenAgeProgess: number;\r\n  goldenAgeGoal: number;\r\n  goldenAgeMult: number;\r\n\r\n  conquestedCivs: Civilization[];\r\n\r\n  constructor(civName:string, leaderName:string, location:string) {\r\n    this.civName = civName;\r\n    this.leaderName = leaderName;\r\n    this.location = location;\r\n\r\n    this.leaderTraits = [];\r\n    this.leaderTraitsMax = 3;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport = Civilization;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/civilization.ts\n **/","import Civilization = require('./civilization');\r\n\r\nclass Templates {\r\n\r\n  startScreen:string = `\r\n    <section class='clickopolis-intro'>\r\n      <h1>Clickopolis</h1>\r\n      <div class=\"start-options\">\r\n        <button class=\"large-btn start-btn load-btn\">Load Game...</button>\r\n        <button class=\"large-btn start-btn new-btn\">New Game</button>\r\n        <button class=\"large-btn start-btn current-btn\">\r\n          <p class=\"current-game-heading\">Current Game -</p>\r\n          <p>\r\n            <span>\r\n              <img src=\"img/achievements.png\"> 5\r\n            </span>\r\n            <span>\r\n              <img src=\"img/strength.png\"> 33\r\n            </span>\r\n            <span>\r\n              <img src=\"img/defense.png\"> 44\r\n            </span>\r\n            <span>\r\n              <img src=\"img/legacy.png\"> 2\r\n            </span>\r\n            <span>\r\n              <img src=\"img/coin.png\"> 1K\r\n            </span>\r\n            <span>\r\n              <img src=\"img/wonder.png\"> 1\r\n            </span>\r\n          </p>\r\n        </button>\r\n      </div>\r\n      <!-- <button class='next-btn'>Next &rarr;</button> -->\r\n    </section>\r\n  `;\r\n\r\n  createStartScreen(playerCiv:Civilization) {\r\n    let startScreen = `\r\n      <section class='clickopolis-intro'>\r\n        <h1><img class='clickopolis-logo custom-size-img' alt='Clickopolis' src='img/clickopolis-logo.png'></h1>\r\n        <div class=\"start-options\">\r\n          <button class=\"large-btn start-btn load-btn\">Load Game...</button>\r\n          <button class=\"large-btn start-btn new-btn\">New Game</button>\r\n          <button class=\"large-btn start-btn current-btn\">\r\n            <p class=\"current-game-heading\">Current Game: ${playerCiv.leaderName} of ${playerCiv.civName}</p>\r\n            <p>\r\n              <span>\r\n                <img src=\"img/achievements.png\"> 5\r\n              </span>\r\n              <span>\r\n                <img src=\"img/strength.png\"> 33\r\n              </span>\r\n              <span>\r\n                <img src=\"img/defense.png\"> 44\r\n              </span>\r\n              <span>\r\n                <img src=\"img/legacy.png\"> 2\r\n              </span>\r\n              <span>\r\n                <img src=\"img/coin.png\"> 1K\r\n              </span>\r\n              <span>\r\n                <img src=\"img/wonder.png\"> 1\r\n              </span>\r\n            </p>\r\n          </button>\r\n        </div>\r\n        <!-- <button class='next-btn'>Next &rarr;</button> -->\r\n      </section>\r\n    `;\r\n    return startScreen;\r\n  };\r\n\r\n  settingsScreen:string = `\r\n    <section class='clickopolis-intro'>\r\n      <img class='clickopolis-logo custom-size-img' src='img/clickopolis-logo.png'>\r\n      <p>Starting from the flames of the ancient world, you will progress steadily towards modernity&hellip;and beyond. You, the leader of a small faction of hunter-gatherers, have decided to settle\r\n        <select id=\"location\">\r\n          <option value=\"none\">select an option!</option>\r\n          <option value=\"coast\">by the Coast</option>\r\n          <option value=\"oasis\">in an Oasis</option>\r\n          <option value=\"forest\">in a Forest</option>\r\n          <option value=\"tundra\">in a Tundra</option>\r\n          <option value=\"iceberg\">on an Iceberg</option>\r\n        </select>\r\n      </p>\r\n      <p>Your name is <input type=\"text\" id=\"leaderName\" maxlength=\"10\" size=\"10\" placeholder=\"Jake\"> of <input type=\"text\" id=\"civName\" placeholder=\"Jaketopia\" maxlength=\"20\"></p>\r\n      <p>You are a(n)\r\n        <select id=\"trait\">\r\n          <option value=\"aggressive\">aggressive</option>\r\n          <option value=\"cosmpolitan\">cosmpolitan</option>\r\n          <option value=\"daring\">daring</option>\r\n          <option value=\"expansionist\">expansionist</option>\r\n          <option value=\"industrious\">industrious</option>\r\n          <option value=\"isolationist\">isolationist</option>\r\n          <option value=\"pacifistic\">pacifistic</option>\r\n          <option value=\"persuasive\">persuasive</option>\r\n        </select>\r\n       leader.</p>\r\n\r\n       <button class='begin-btn'>Begin Game!</button>\r\n\r\n    </section>\r\n  `;\r\n\r\n  resourcesScreen:string = `\r\n    <section class='screen resources-screen'>\r\n      <h2><img src='img/resources.png'> Resources</h2>\r\n      <section class='resources-screen-inner'>\r\n        <div class='panel food-panel'>\r\n          <button class='food-btn'><img src='img/food-alt.png'> Grow Food</button>\r\n          <span class='resource-info'></span>\r\n        </div>\r\n        <div class='panel prod-panel'>\r\n          <button class='prod-btn'><img src='img/prod.png'> Create Production</button>\r\n        </div>\r\n\r\n        <div class='panel resources-panel'>\r\n          <span class='resource' data-resource='stone'>\r\n            <img src='img/stone.png'> <span>25</span>\r\n          </span>\r\n        </div>\r\n\r\n      </section>\r\n    </section>\r\n\r\n  `;\r\n\r\n  citizensScreen:string = `\r\n    <section class='screen citizens-screen'>\r\n      <h2>Citizens</h2>\r\n      <section class='citizens-screen-inner'>\r\n        <div class='row citizen-farmer'>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  `;\r\n\r\n  createScreenHeader(playerCiv:Civilization):string {\r\n    let screenHeader = `\r\n      <header class='screen-header'>\r\n        <h1>Clickopolis</h1>\r\n        <h2>${playerCiv.leaderName} of ${playerCiv.civName}</h2>\r\n      </header>\r\n    `;\r\n    return screenHeader;\r\n  }\r\n\r\n  createCitizenScreen(playerCiv:Civilization):string {\r\n    let citizensScreen = `\r\n      <section class='screen citizens-screen'>\r\n        <h2>Citizens</h2>\r\n        <section class='citizens-screen-inner'>\r\n          <div class='row citizen-farmer'>\r\n            ${playerCiv.civName}\r\n            ${playerCiv.leaderName}\r\n            ${playerCiv.leaderTraits[0]}\r\n          </div>\r\n        </section>\r\n      </section>\r\n    `;\r\n    return citizensScreen;\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport = Templates;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./game/template.ts\n **/"],"sourceRoot":""}